ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SD_CLK.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SD_CLK_Start,"ax",%progbits
  19              		.align	2
  20              		.global	SD_CLK_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	SD_CLK_Start, %function
  24              	SD_CLK_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\SD_CLK.c"
   1:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SD_CLK.c **** * File Name: SD_CLK.c
   3:.\Generated_Source\PSoC5/SD_CLK.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/SD_CLK.c **** *
   5:.\Generated_Source\PSoC5/SD_CLK.c **** *  Description:
   6:.\Generated_Source\PSoC5/SD_CLK.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/SD_CLK.c **** *
   8:.\Generated_Source\PSoC5/SD_CLK.c **** *  Note:
   9:.\Generated_Source\PSoC5/SD_CLK.c **** *
  10:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/SD_CLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/SD_CLK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/SD_CLK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/SD_CLK.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/SD_CLK.c **** 
  17:.\Generated_Source\PSoC5/SD_CLK.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/SD_CLK.c **** #include "SD_CLK.h"
  19:.\Generated_Source\PSoC5/SD_CLK.c **** 
  20:.\Generated_Source\PSoC5/SD_CLK.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/SD_CLK.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/SD_CLK.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/SD_CLK.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/SD_CLK.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/SD_CLK.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/SD_CLK.c **** 
  27:.\Generated_Source\PSoC5/SD_CLK.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/SD_CLK.c **** 
  29:.\Generated_Source\PSoC5/SD_CLK.c **** 
  30:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_Start
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 2


  32:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/SD_CLK.c **** *
  34:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
  35:.\Generated_Source\PSoC5/SD_CLK.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/SD_CLK.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/SD_CLK.c **** *
  38:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
  39:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
  40:.\Generated_Source\PSoC5/SD_CLK.c **** *
  41:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
  42:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
  43:.\Generated_Source\PSoC5/SD_CLK.c **** *
  44:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_Start(void) 
  46:.\Generated_Source\PSoC5/SD_CLK.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/SD_CLK.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/SD_CLK.c ****     SD_CLK_CLKEN |= SD_CLK_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 0549     		ldr	r1, .L2
  49:.\Generated_Source\PSoC5/SD_CLK.c **** 	SD_CLK_CLKSTBY |= SD_CLK_CLKSTBY_MASK;
  34              		.loc 1 49 0
  35 0002 064A     		ldr	r2, .L2+4
  48:.\Generated_Source\PSoC5/SD_CLK.c **** 	SD_CLK_CLKSTBY |= SD_CLK_CLKSTBY_MASK;
  36              		.loc 1 48 0
  37 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  38 0006 43F00103 		orr	r3, r3, #1
  39 000a 0B70     		strb	r3, [r1]
  40              		.loc 1 49 0
  41 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42 000e 43F00103 		orr	r3, r3, #1
  43 0012 1370     		strb	r3, [r2]
  44 0014 7047     		bx	lr
  45              	.L3:
  46 0016 00BF     		.align	2
  47              	.L2:
  48 0018 A2430040 		.word	1073759138
  49 001c B2430040 		.word	1073759154
  50              		.cfi_endproc
  51              	.LFE0:
  52              		.size	SD_CLK_Start, .-SD_CLK_Start
  53              		.section	.text.SD_CLK_Stop,"ax",%progbits
  54              		.align	2
  55              		.global	SD_CLK_Stop
  56              		.thumb
  57              		.thumb_func
  58              		.type	SD_CLK_Stop, %function
  59              	SD_CLK_Stop:
  60              	.LFB1:
  50:.\Generated_Source\PSoC5/SD_CLK.c **** }
  51:.\Generated_Source\PSoC5/SD_CLK.c **** 
  52:.\Generated_Source\PSoC5/SD_CLK.c **** 
  53:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 3


  54:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_Stop
  55:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/SD_CLK.c **** *
  57:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
  58:.\Generated_Source\PSoC5/SD_CLK.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/SD_CLK.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/SD_CLK.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/SD_CLK.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/SD_CLK.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/SD_CLK.c **** *
  64:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
  65:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
  66:.\Generated_Source\PSoC5/SD_CLK.c **** *
  67:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
  68:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
  69:.\Generated_Source\PSoC5/SD_CLK.c **** *
  70:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_Stop(void) 
  72:.\Generated_Source\PSoC5/SD_CLK.c **** {
  61              		.loc 1 72 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/SD_CLK.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/SD_CLK.c ****     SD_CLK_CLKEN &= (uint8)(~SD_CLK_CLKEN_MASK);
  66              		.loc 1 74 0
  67 0000 0549     		ldr	r1, .L5
  75:.\Generated_Source\PSoC5/SD_CLK.c **** 	SD_CLK_CLKSTBY &= (uint8)(~SD_CLK_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 0002 064A     		ldr	r2, .L5+4
  74:.\Generated_Source\PSoC5/SD_CLK.c **** 	SD_CLK_CLKSTBY &= (uint8)(~SD_CLK_CLKSTBY_MASK);
  70              		.loc 1 74 0
  71 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72 0006 03F0FE03 		and	r3, r3, #254
  73 000a 0B70     		strb	r3, [r1]
  74              		.loc 1 75 0
  75 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  76 000e 03F0FE03 		and	r3, r3, #254
  77 0012 1370     		strb	r3, [r2]
  78 0014 7047     		bx	lr
  79              	.L6:
  80 0016 00BF     		.align	2
  81              	.L5:
  82 0018 A2430040 		.word	1073759138
  83 001c B2430040 		.word	1073759154
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	SD_CLK_Stop, .-SD_CLK_Stop
  87              		.section	.text.SD_CLK_StopBlock,"ax",%progbits
  88              		.align	2
  89              		.global	SD_CLK_StopBlock
  90              		.thumb
  91              		.thumb_func
  92              		.type	SD_CLK_StopBlock, %function
  93              	SD_CLK_StopBlock:
  94              	.LFB2:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 4


  76:.\Generated_Source\PSoC5/SD_CLK.c **** }
  77:.\Generated_Source\PSoC5/SD_CLK.c **** 
  78:.\Generated_Source\PSoC5/SD_CLK.c **** 
  79:.\Generated_Source\PSoC5/SD_CLK.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/SD_CLK.c **** 
  81:.\Generated_Source\PSoC5/SD_CLK.c **** 
  82:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_StopBlock
  84:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/SD_CLK.c **** *
  86:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
  87:.\Generated_Source\PSoC5/SD_CLK.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/SD_CLK.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/SD_CLK.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/SD_CLK.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/SD_CLK.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/SD_CLK.c **** *
  93:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
  94:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
  95:.\Generated_Source\PSoC5/SD_CLK.c **** *
  96:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
  97:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
  98:.\Generated_Source\PSoC5/SD_CLK.c **** *
  99:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_StopBlock(void) 
 101:.\Generated_Source\PSoC5/SD_CLK.c **** {
  95              		.loc 1 101 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/SD_CLK.c ****     if ((SD_CLK_CLKEN & SD_CLK_CLKEN_MASK) != 0u)
 100              		.loc 1 102 0
 101 0000 164B     		ldr	r3, .L18
 102 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103 0004 DB07     		lsls	r3, r3, #31
 104 0006 28D5     		bpl	.L16
 105              	.LBB10:
 103:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 104:.\Generated_Source\PSoC5/SD_CLK.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/SD_CLK.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/SD_CLK.c **** 
 107:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_LD = 0u;
 106              		.loc 1 107 0
 107 0008 154B     		ldr	r3, .L18+4
 108              	.LBE10:
 101:.\Generated_Source\PSoC5/SD_CLK.c ****     if ((SD_CLK_CLKEN & SD_CLK_CLKEN_MASK) != 0u)
 109              		.loc 1 101 0
 110 000a 70B4     		push	{r4, r5, r6}
 111              		.cfi_def_cfa_offset 12
 112              		.cfi_offset 4, -12
 113              		.cfi_offset 5, -8
 114              		.cfi_offset 6, -4
 115              	.LBB11:
 108:.\Generated_Source\PSoC5/SD_CLK.c **** 
 109:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/SD_CLK.c **** #if defined(SD_CLK__CFG3)
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 5


 111:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_AMASK = SD_CLK_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/SD_CLK.c **** #else
 114:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_DMASK = SD_CLK_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* SD_CLK__CFG3 */
 117:.\Generated_Source\PSoC5/SD_CLK.c **** 
 118:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 120:.\Generated_Source\PSoC5/SD_CLK.c **** 
 121:.\Generated_Source\PSoC5/SD_CLK.c ****         oldDivider = CY_GET_REG16(SD_CLK_DIV_PTR);
 122:.\Generated_Source\PSoC5/SD_CLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 123:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124:.\Generated_Source\PSoC5/SD_CLK.c **** 
 125:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/SD_CLK.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 116              		.loc 1 126 0
 117 000c 1946     		mov	r1, r3
 115:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* SD_CLK__CFG3 */
 118              		.loc 1 115 0
 119 000e 154C     		ldr	r4, .L18+8
 114:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_AMASK = 0x00u;
 120              		.loc 1 114 0
 121 0010 154D     		ldr	r5, .L18+12
 107:.\Generated_Source\PSoC5/SD_CLK.c **** 
 122              		.loc 1 107 0
 123 0012 0022     		movs	r2, #0
 119:.\Generated_Source\PSoC5/SD_CLK.c **** 
 124              		.loc 1 119 0
 125 0014 1548     		ldr	r0, .L18+16
 114:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_AMASK = 0x00u;
 126              		.loc 1 114 0
 127 0016 0126     		movs	r6, #1
 107:.\Generated_Source\PSoC5/SD_CLK.c **** 
 128              		.loc 1 107 0
 129 0018 1A70     		strb	r2, [r3]
 114:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_AMASK = 0x00u;
 130              		.loc 1 114 0
 131 001a 2E70     		strb	r6, [r5]
 115:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* SD_CLK__CFG3 */
 132              		.loc 1 115 0
 133 001c 2270     		strb	r2, [r4]
 119:.\Generated_Source\PSoC5/SD_CLK.c **** 
 134              		.loc 1 119 0
 135 001e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 136 0020 02F07F02 		and	r2, r2, #127
 137 0024 0270     		strb	r2, [r0]
 121:.\Generated_Source\PSoC5/SD_CLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 138              		.loc 1 121 0
 139 0026 B4F86C00 		ldrh	r0, [r4, #108]
 123:.\Generated_Source\PSoC5/SD_CLK.c **** 
 140              		.loc 1 123 0
 141 002a 0722     		movs	r2, #7
 121:.\Generated_Source\PSoC5/SD_CLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 142              		.loc 1 121 0
 143 002c 80B2     		uxth	r0, r0
 144              	.LVL0:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 6


 122:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 145              		.loc 1 122 0
 146 002e 24F8120C 		strh	r0, [r4, #-18]	@ movhi
 123:.\Generated_Source\PSoC5/SD_CLK.c **** 
 147              		.loc 1 123 0
 148 0032 1A70     		strb	r2, [r3]
 149              	.L9:
 150              		.loc 1 126 0 discriminator 1
 151 0034 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 152 0036 0A4A     		ldr	r2, .L18+4
 153 0038 13F00103 		ands	r3, r3, #1
 154 003c FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/SD_CLK.c **** 
 129:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_CLKEN &= (uint8)(~SD_CLK_CLKEN_MASK);
 155              		.loc 1 130 0
 156 003e 074D     		ldr	r5, .L18
 131:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_CLKSTBY &= (uint8)(~SD_CLK_CLKSTBY_MASK);
 157              		.loc 1 131 0
 158 0040 0B4C     		ldr	r4, .L18+20
 130:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_CLKSTBY &= (uint8)(~SD_CLK_CLKSTBY_MASK);
 159              		.loc 1 130 0
 160 0042 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 132:.\Generated_Source\PSoC5/SD_CLK.c **** 
 133:.\Generated_Source\PSoC5/SD_CLK.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/SD_CLK.c ****         CLK_DIST_LD = 0x00u;
 136:.\Generated_Source\PSoC5/SD_CLK.c ****         CY_SET_REG16(SD_CLK_DIV_PTR, oldDivider);
 161              		.loc 1 136 0
 162 0044 0B4E     		ldr	r6, .L18+24
 130:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_CLKSTBY &= (uint8)(~SD_CLK_CLKSTBY_MASK);
 163              		.loc 1 130 0
 164 0046 01F0FE01 		and	r1, r1, #254
 165 004a 2970     		strb	r1, [r5]
 131:.\Generated_Source\PSoC5/SD_CLK.c **** 
 166              		.loc 1 131 0
 167 004c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 168 004e 01F0FE01 		and	r1, r1, #254
 169 0052 2170     		strb	r1, [r4]
 135:.\Generated_Source\PSoC5/SD_CLK.c ****         CY_SET_REG16(SD_CLK_DIV_PTR, oldDivider);
 170              		.loc 1 135 0
 171 0054 1370     		strb	r3, [r2]
 172              		.loc 1 136 0
 173 0056 3080     		strh	r0, [r6]	@ movhi
 174              	.LBE11:
 137:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 139:.\Generated_Source\PSoC5/SD_CLK.c **** }
 175              		.loc 1 139 0
 176 0058 70BC     		pop	{r4, r5, r6}
 177              		.cfi_restore 6
 178              		.cfi_restore 5
 179              		.cfi_restore 4
 180              		.cfi_def_cfa_offset 0
 181              	.LVL1:
 182              	.L16:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 7


 183 005a 7047     		bx	lr
 184              	.L19:
 185              		.align	2
 186              	.L18:
 187 005c A2430040 		.word	1073759138
 188 0060 01400040 		.word	1073758209
 189 0064 14400040 		.word	1073758228
 190 0068 10400040 		.word	1073758224
 191 006c 08400040 		.word	1073758216
 192 0070 B2430040 		.word	1073759154
 193 0074 80400040 		.word	1073758336
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	SD_CLK_StopBlock, .-SD_CLK_StopBlock
 197              		.section	.text.SD_CLK_StandbyPower,"ax",%progbits
 198              		.align	2
 199              		.global	SD_CLK_StandbyPower
 200              		.thumb
 201              		.thumb_func
 202              		.type	SD_CLK_StandbyPower, %function
 203              	SD_CLK_StandbyPower:
 204              	.LFB3:
 140:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/SD_CLK.c **** 
 142:.\Generated_Source\PSoC5/SD_CLK.c **** 
 143:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_StandbyPower
 145:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/SD_CLK.c **** *
 147:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 148:.\Generated_Source\PSoC5/SD_CLK.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/SD_CLK.c **** *
 150:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 151:.\Generated_Source\PSoC5/SD_CLK.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/SD_CLK.c **** *
 153:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 154:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 155:.\Generated_Source\PSoC5/SD_CLK.c **** *
 156:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/SD_CLK.c **** {
 205              		.loc 1 158 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL2:
 159:.\Generated_Source\PSoC5/SD_CLK.c ****     if(state == 0u)
 160:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 161:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_CLKSTBY &= (uint8)(~SD_CLK_CLKSTBY_MASK);
 211              		.loc 1 161 0
 212 0000 054A     		ldr	r2, .L24
 213 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 159:.\Generated_Source\PSoC5/SD_CLK.c ****     if(state == 0u)
 214              		.loc 1 159 0
 215 0004 18B1     		cbz	r0, .L23
 162:.\Generated_Source\PSoC5/SD_CLK.c ****     }
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 8


 163:.\Generated_Source\PSoC5/SD_CLK.c ****     else
 164:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 165:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_CLKSTBY |= SD_CLK_CLKSTBY_MASK;
 216              		.loc 1 165 0
 217 0006 43F00103 		orr	r3, r3, #1
 218 000a 1370     		strb	r3, [r2]
 219 000c 7047     		bx	lr
 220              	.L23:
 161:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 221              		.loc 1 161 0
 222 000e 03F0FE03 		and	r3, r3, #254
 223 0012 1370     		strb	r3, [r2]
 224 0014 7047     		bx	lr
 225              	.L25:
 226 0016 00BF     		.align	2
 227              	.L24:
 228 0018 B2430040 		.word	1073759154
 229              		.cfi_endproc
 230              	.LFE3:
 231              		.size	SD_CLK_StandbyPower, .-SD_CLK_StandbyPower
 232              		.section	.text.SD_CLK_SetDividerRegister,"ax",%progbits
 233              		.align	2
 234              		.global	SD_CLK_SetDividerRegister
 235              		.thumb
 236              		.thumb_func
 237              		.type	SD_CLK_SetDividerRegister, %function
 238              	SD_CLK_SetDividerRegister:
 239              	.LFB4:
 166:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 167:.\Generated_Source\PSoC5/SD_CLK.c **** }
 168:.\Generated_Source\PSoC5/SD_CLK.c **** 
 169:.\Generated_Source\PSoC5/SD_CLK.c **** 
 170:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_SetDividerRegister
 172:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/SD_CLK.c **** *
 174:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 175:.\Generated_Source\PSoC5/SD_CLK.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/SD_CLK.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/SD_CLK.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/SD_CLK.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/SD_CLK.c **** *
 180:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 181:.\Generated_Source\PSoC5/SD_CLK.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/SD_CLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/SD_CLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/SD_CLK.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/SD_CLK.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/SD_CLK.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/SD_CLK.c **** *   cycle.
 188:.\Generated_Source\PSoC5/SD_CLK.c **** *
 189:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 190:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 191:.\Generated_Source\PSoC5/SD_CLK.c **** *
 192:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/SD_CLK.c ****                                 
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 9


 195:.\Generated_Source\PSoC5/SD_CLK.c **** {
 240              		.loc 1 195 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL3:
 245 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 246              		.cfi_def_cfa_offset 20
 247              		.cfi_offset 4, -20
 248              		.cfi_offset 5, -16
 249              		.cfi_offset 6, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252              	.LBB12:
 253              	.LBB13:
 196:.\Generated_Source\PSoC5/SD_CLK.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/SD_CLK.c **** 
 198:.\Generated_Source\PSoC5/SD_CLK.c ****     uint8 currSrc = SD_CLK_GetSourceRegister();
 199:.\Generated_Source\PSoC5/SD_CLK.c ****     uint16 oldDivider = SD_CLK_GetDividerRegister();
 200:.\Generated_Source\PSoC5/SD_CLK.c **** 
 201:.\Generated_Source\PSoC5/SD_CLK.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 203:.\Generated_Source\PSoC5/SD_CLK.c ****         enabled = SD_CLK_CLKEN & SD_CLK_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/SD_CLK.c **** 
 205:.\Generated_Source\PSoC5/SD_CLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/SD_CLK.c ****         {
 207:.\Generated_Source\PSoC5/SD_CLK.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/SD_CLK.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 210:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/SD_CLK.c ****                 CY_SET_REG16(SD_CLK_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/SD_CLK.c ****                 SD_CLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 216:.\Generated_Source\PSoC5/SD_CLK.c ****             else
 217:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 218:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/SD_CLK.c ****                 SD_CLK_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/SD_CLK.c ****                 CY_SET_REG16(SD_CLK_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 223:.\Generated_Source\PSoC5/SD_CLK.c ****         }
 224:.\Generated_Source\PSoC5/SD_CLK.c ****         else
 225:.\Generated_Source\PSoC5/SD_CLK.c ****         {
 226:.\Generated_Source\PSoC5/SD_CLK.c **** 			
 227:.\Generated_Source\PSoC5/SD_CLK.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 229:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/SD_CLK.c **** 
 231:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/SD_CLK.c **** #if defined(SD_CLK__CFG3)
 233:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_AMASK = SD_CLK_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/SD_CLK.c **** #else
 236:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_DMASK = SD_CLK_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_AMASK = 0x00u;
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 10


 238:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* SD_CLK__CFG3 */
 239:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/SD_CLK.c **** 
 242:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/SD_CLK.c ****                 if (((SD_CLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/SD_CLK.c ****                 {
 245:.\Generated_Source\PSoC5/SD_CLK.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/SD_CLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/SD_CLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/SD_CLK.c **** 
 249:.\Generated_Source\PSoC5/SD_CLK.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/SD_CLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/SD_CLK.c **** 
 253:.\Generated_Source\PSoC5/SD_CLK.c ****                     SD_CLK_CLKEN &= (uint8)(~SD_CLK_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/SD_CLK.c **** 
 255:.\Generated_Source\PSoC5/SD_CLK.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/SD_CLK.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/SD_CLK.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/SD_CLK.c ****                 }
 260:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 261:.\Generated_Source\PSoC5/SD_CLK.c **** 
 262:.\Generated_Source\PSoC5/SD_CLK.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/SD_CLK.c ****             if ((SD_CLK_CLKEN & SD_CLK_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 265:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/SD_CLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/SD_CLK.c **** 
 268:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/SD_CLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 271:.\Generated_Source\PSoC5/SD_CLK.c ****             else
 272:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 273:.\Generated_Source\PSoC5/SD_CLK.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/SD_CLK.c ****                 CY_SET_REG16(SD_CLK_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/SD_CLK.c **** 				SD_CLK_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 277:.\Generated_Source\PSoC5/SD_CLK.c ****         }
 278:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 279:.\Generated_Source\PSoC5/SD_CLK.c **** }
 280:.\Generated_Source\PSoC5/SD_CLK.c **** 
 281:.\Generated_Source\PSoC5/SD_CLK.c **** 
 282:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_GetDividerRegister
 284:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/SD_CLK.c **** *
 286:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 287:.\Generated_Source\PSoC5/SD_CLK.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/SD_CLK.c **** *
 289:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 290:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 291:.\Generated_Source\PSoC5/SD_CLK.c **** *
 292:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 293:.\Generated_Source\PSoC5/SD_CLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/SD_CLK.c **** *  divide by 2, the return value will be 1.
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 11


 295:.\Generated_Source\PSoC5/SD_CLK.c **** *
 296:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/SD_CLK.c **** uint16 SD_CLK_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/SD_CLK.c **** {
 299:.\Generated_Source\PSoC5/SD_CLK.c ****     return CY_GET_REG16(SD_CLK_DIV_PTR);
 300:.\Generated_Source\PSoC5/SD_CLK.c **** }
 301:.\Generated_Source\PSoC5/SD_CLK.c **** 
 302:.\Generated_Source\PSoC5/SD_CLK.c **** 
 303:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_SetModeRegister
 305:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/SD_CLK.c **** *
 307:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 308:.\Generated_Source\PSoC5/SD_CLK.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/SD_CLK.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/SD_CLK.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/SD_CLK.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/SD_CLK.c **** *
 313:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 314:.\Generated_Source\PSoC5/SD_CLK.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/SD_CLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/SD_CLK.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/SD_CLK.c **** *                 value.
 319:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/SD_CLK.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/SD_CLK.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/SD_CLK.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/SD_CLK.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/SD_CLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/SD_CLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/SD_CLK.c **** *
 328:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 329:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 330:.\Generated_Source\PSoC5/SD_CLK.c **** *
 331:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/SD_CLK.c **** {
 334:.\Generated_Source\PSoC5/SD_CLK.c ****     SD_CLK_MOD_SRC |= modeBitMask & (uint8)SD_CLK_MODE_MASK;
 335:.\Generated_Source\PSoC5/SD_CLK.c **** }
 336:.\Generated_Source\PSoC5/SD_CLK.c **** 
 337:.\Generated_Source\PSoC5/SD_CLK.c **** 
 338:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_ClearModeRegister
 340:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/SD_CLK.c **** *
 342:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 343:.\Generated_Source\PSoC5/SD_CLK.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/SD_CLK.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/SD_CLK.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/SD_CLK.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/SD_CLK.c **** *
 348:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 349:.\Generated_Source\PSoC5/SD_CLK.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/SD_CLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 12


 352:.\Generated_Source\PSoC5/SD_CLK.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/SD_CLK.c **** *                 value.
 354:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/SD_CLK.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/SD_CLK.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/SD_CLK.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/SD_CLK.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/SD_CLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/SD_CLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/SD_CLK.c **** *
 363:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 364:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 365:.\Generated_Source\PSoC5/SD_CLK.c **** *
 366:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/SD_CLK.c **** {
 369:.\Generated_Source\PSoC5/SD_CLK.c ****     SD_CLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(SD_CLK_MODE_MASK));
 370:.\Generated_Source\PSoC5/SD_CLK.c **** }
 371:.\Generated_Source\PSoC5/SD_CLK.c **** 
 372:.\Generated_Source\PSoC5/SD_CLK.c **** 
 373:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_GetModeRegister
 375:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/SD_CLK.c **** *
 377:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 378:.\Generated_Source\PSoC5/SD_CLK.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/SD_CLK.c **** *
 380:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 381:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 382:.\Generated_Source\PSoC5/SD_CLK.c **** *
 383:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 384:.\Generated_Source\PSoC5/SD_CLK.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/SD_CLK.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/SD_CLK.c **** *
 387:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/SD_CLK.c **** uint8 SD_CLK_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/SD_CLK.c **** {
 390:.\Generated_Source\PSoC5/SD_CLK.c ****     return SD_CLK_MOD_SRC & (uint8)(SD_CLK_MODE_MASK);
 391:.\Generated_Source\PSoC5/SD_CLK.c **** }
 392:.\Generated_Source\PSoC5/SD_CLK.c **** 
 393:.\Generated_Source\PSoC5/SD_CLK.c **** 
 394:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_SetSourceRegister
 396:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/SD_CLK.c **** *
 398:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 399:.\Generated_Source\PSoC5/SD_CLK.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/SD_CLK.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/SD_CLK.c **** *
 402:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 403:.\Generated_Source\PSoC5/SD_CLK.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/SD_CLK.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_ILO
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 13


 409:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/SD_CLK.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/SD_CLK.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/SD_CLK.c **** *
 415:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 416:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 417:.\Generated_Source\PSoC5/SD_CLK.c **** *
 418:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/SD_CLK.c **** void SD_CLK_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/SD_CLK.c **** {
 421:.\Generated_Source\PSoC5/SD_CLK.c ****     uint16 currDiv = SD_CLK_GetDividerRegister();
 422:.\Generated_Source\PSoC5/SD_CLK.c ****     uint8 oldSrc = SD_CLK_GetSourceRegister();
 423:.\Generated_Source\PSoC5/SD_CLK.c **** 
 424:.\Generated_Source\PSoC5/SD_CLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/SD_CLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 427:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/SD_CLK.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC =
 431:.\Generated_Source\PSoC5/SD_CLK.c ****             (SD_CLK_MOD_SRC & (uint8)(~SD_CLK_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 433:.\Generated_Source\PSoC5/SD_CLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/SD_CLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 436:.\Generated_Source\PSoC5/SD_CLK.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/SD_CLK.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC =
 439:.\Generated_Source\PSoC5/SD_CLK.c ****             (SD_CLK_MOD_SRC & (uint8)(~SD_CLK_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 442:.\Generated_Source\PSoC5/SD_CLK.c ****     else
 443:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 444:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC =
 445:.\Generated_Source\PSoC5/SD_CLK.c ****             (SD_CLK_MOD_SRC & (uint8)(~SD_CLK_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 447:.\Generated_Source\PSoC5/SD_CLK.c **** }
 448:.\Generated_Source\PSoC5/SD_CLK.c **** 
 449:.\Generated_Source\PSoC5/SD_CLK.c **** 
 450:.\Generated_Source\PSoC5/SD_CLK.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/SD_CLK.c **** * Function Name: SD_CLK_GetSourceRegister
 452:.\Generated_Source\PSoC5/SD_CLK.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/SD_CLK.c **** *
 454:.\Generated_Source\PSoC5/SD_CLK.c **** * Summary:
 455:.\Generated_Source\PSoC5/SD_CLK.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/SD_CLK.c **** *
 457:.\Generated_Source\PSoC5/SD_CLK.c **** * Parameters:
 458:.\Generated_Source\PSoC5/SD_CLK.c **** *  None
 459:.\Generated_Source\PSoC5/SD_CLK.c **** *
 460:.\Generated_Source\PSoC5/SD_CLK.c **** * Returns:
 461:.\Generated_Source\PSoC5/SD_CLK.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/SD_CLK.c **** *
 463:.\Generated_Source\PSoC5/SD_CLK.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/SD_CLK.c **** uint8 SD_CLK_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/SD_CLK.c **** {
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 14


 466:.\Generated_Source\PSoC5/SD_CLK.c ****     return SD_CLK_MOD_SRC & SD_CLK_SRC_SEL_MSK;
 254              		.loc 1 466 0
 255 0002 304D     		ldr	r5, .L50
 256              	.LBE13:
 257              	.LBE12:
 258              	.LBB16:
 259              	.LBB17:
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 260              		.loc 1 299 0
 261 0004 304E     		ldr	r6, .L50+4
 262              	.LBE17:
 263              	.LBE16:
 264              	.LBB20:
 265              	.LBB14:
 266              		.loc 1 466 0
 267 0006 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 268              	.LBE14:
 269              	.LBE20:
 270              	.LBB21:
 271              	.LBB18:
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 272              		.loc 1 299 0
 273 0008 3388     		ldrh	r3, [r6]
 274              	.LBE18:
 275              	.LBE21:
 276              	.LBB22:
 277              	.LBB15:
 278              		.loc 1 466 0
 279 000a 02F00702 		and	r2, r2, #7
 280              	.LBE15:
 281              	.LBE22:
 282              	.LBB23:
 283              	.LBB19:
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 284              		.loc 1 299 0
 285 000e 9BB2     		uxth	r3, r3
 286              	.LBE19:
 287              	.LBE23:
 201:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 288              		.loc 1 201 0
 289 0010 8342     		cmp	r3, r0
 290 0012 4DD0     		beq	.L26
 203:.\Generated_Source\PSoC5/SD_CLK.c **** 
 291              		.loc 1 203 0
 292 0014 2D4C     		ldr	r4, .L50+8
 293 0016 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 294 0018 E4B2     		uxtb	r4, r4
 295              	.LVL4:
 205:.\Generated_Source\PSoC5/SD_CLK.c ****         {
 296              		.loc 1 205 0
 297 001a 42B9     		cbnz	r2, .L29
 205:.\Generated_Source\PSoC5/SD_CLK.c ****         {
 298              		.loc 1 205 0 is_stmt 0 discriminator 1
 299 001c 2BB9     		cbnz	r3, .L48
 213:.\Generated_Source\PSoC5/SD_CLK.c ****                 SD_CLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 300              		.loc 1 213 0 is_stmt 1
 301 001e 3080     		strh	r0, [r6]	@ movhi
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 15


 214:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 302              		.loc 1 214 0
 303 0020 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 304 0022 03F0BF03 		and	r3, r3, #191
 305 0026 2B70     		strb	r3, [r5]
 306 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 307              	.LVL5:
 308              	.L48:
 205:.\Generated_Source\PSoC5/SD_CLK.c ****         {
 309              		.loc 1 205 0 discriminator 2
 310 002a 0028     		cmp	r0, #0
 311 002c 44D0     		beq	.L31
 312              	.L29:
 227:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 313              		.loc 1 227 0
 314 002e 14F00104 		ands	r4, r4, #1
 315              	.LVL6:
 316 0032 25D0     		beq	.L33
 237:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* SD_CLK__CFG3 */
 317              		.loc 1 237 0
 318 0034 264E     		ldr	r6, .L50+12
 229:.\Generated_Source\PSoC5/SD_CLK.c **** 
 319              		.loc 1 229 0
 320 0036 DFF8A4C0 		ldr	ip, .L50+24
 236:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_AMASK = 0x00u;
 321              		.loc 1 236 0
 322 003a 264F     		ldr	r7, .L50+16
 229:.\Generated_Source\PSoC5/SD_CLK.c **** 
 323              		.loc 1 229 0
 324 003c 0022     		movs	r2, #0
 240:.\Generated_Source\PSoC5/SD_CLK.c **** 
 325              		.loc 1 240 0
 326 003e 264D     		ldr	r5, .L50+20
 236:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_AMASK = 0x00u;
 327              		.loc 1 236 0
 328 0040 4FF0010E 		mov	lr, #1
 229:.\Generated_Source\PSoC5/SD_CLK.c **** 
 329              		.loc 1 229 0
 330 0044 8CF80020 		strb	r2, [ip]
 236:.\Generated_Source\PSoC5/SD_CLK.c ****                 CLK_DIST_AMASK = 0x00u;
 331              		.loc 1 236 0
 332 0048 87F800E0 		strb	lr, [r7]
 237:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* SD_CLK__CFG3 */
 333              		.loc 1 237 0
 334 004c 3270     		strb	r2, [r6]
 240:.\Generated_Source\PSoC5/SD_CLK.c **** 
 335              		.loc 1 240 0
 336 004e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 337 0050 02F07F02 		and	r2, r2, #127
 338 0054 2A70     		strb	r2, [r5]
 243:.\Generated_Source\PSoC5/SD_CLK.c ****                 {
 339              		.loc 1 243 0
 340 0056 96F86E20 		ldrb	r2, [r6, #110]	@ zero_extendqisi2
 341 005a 1607     		lsls	r6, r2, #28
 342 005c 29D4     		bmi	.L49
 343              	.L34:
 247:.\Generated_Source\PSoC5/SD_CLK.c **** 
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 16


 344              		.loc 1 247 0
 345 005e 1F4A     		ldr	r2, .L50+24
 246:.\Generated_Source\PSoC5/SD_CLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 346              		.loc 1 246 0
 347 0060 1F4F     		ldr	r7, .L50+28
 250:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 348              		.loc 1 250 0
 349 0062 1546     		mov	r5, r2
 247:.\Generated_Source\PSoC5/SD_CLK.c **** 
 350              		.loc 1 247 0
 351 0064 0726     		movs	r6, #7
 246:.\Generated_Source\PSoC5/SD_CLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 352              		.loc 1 246 0
 353 0066 3B80     		strh	r3, [r7]	@ movhi
 247:.\Generated_Source\PSoC5/SD_CLK.c **** 
 354              		.loc 1 247 0
 355 0068 1670     		strb	r6, [r2]
 356              	.L36:
 250:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 357              		.loc 1 250 0 discriminator 1
 358 006a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 359 006c 1B4A     		ldr	r2, .L50+24
 360 006e 13F00103 		ands	r3, r3, #1
 361 0072 FAD1     		bne	.L36
 253:.\Generated_Source\PSoC5/SD_CLK.c **** 
 362              		.loc 1 253 0
 363 0074 154E     		ldr	r6, .L50+8
 364 0076 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 365 0078 05F0FE05 		and	r5, r5, #254
 366 007c 3570     		strb	r5, [r6]
 257:.\Generated_Source\PSoC5/SD_CLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 367              		.loc 1 257 0
 368 007e 1370     		strb	r3, [r2]
 369              	.L33:
 263:.\Generated_Source\PSoC5/SD_CLK.c ****             {
 370              		.loc 1 263 0
 371 0080 124B     		ldr	r3, .L50+8
 372 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 373 0084 D507     		lsls	r5, r2, #31
 374 0086 0ED5     		bpl	.L37
 268:.\Generated_Source\PSoC5/SD_CLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 375              		.loc 1 268 0
 376 0088 6FF46872 		mvn	r2, #928
 377 008c 1344     		add	r3, r3, r2
 269:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 378              		.loc 1 269 0
 379 008e 1A46     		mov	r2, r3
 268:.\Generated_Source\PSoC5/SD_CLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 380              		.loc 1 268 0
 381 0090 0029     		cmp	r1, #0
 266:.\Generated_Source\PSoC5/SD_CLK.c **** 
 382              		.loc 1 266 0
 383 0092 134C     		ldr	r4, .L50+28
 268:.\Generated_Source\PSoC5/SD_CLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 384              		.loc 1 268 0
 385 0094 14BF     		ite	ne
 386 0096 0321     		movne	r1, #3
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 17


 387              	.LVL7:
 388 0098 0121     		moveq	r1, #1
 266:.\Generated_Source\PSoC5/SD_CLK.c **** 
 389              		.loc 1 266 0
 390 009a 2080     		strh	r0, [r4]	@ movhi
 268:.\Generated_Source\PSoC5/SD_CLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 391              		.loc 1 268 0
 392 009c 1970     		strb	r1, [r3]
 393              	.L39:
 269:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 394              		.loc 1 269 0 discriminator 1
 395 009e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 396 00a0 DB07     		lsls	r3, r3, #31
 397 00a2 FCD4     		bmi	.L39
 398 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 399              	.LVL8:
 400              	.L37:
 274:.\Generated_Source\PSoC5/SD_CLK.c **** 				SD_CLK_CLKEN |= enabled;
 401              		.loc 1 274 0
 402 00a6 084A     		ldr	r2, .L50+4
 403 00a8 1080     		strh	r0, [r2]	@ movhi
 275:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 404              		.loc 1 275 0
 405 00aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 406 00ac 1443     		orrs	r4, r4, r2
 407 00ae 1C70     		strb	r4, [r3]
 408              	.L26:
 409 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 410              	.L49:
 243:.\Generated_Source\PSoC5/SD_CLK.c ****                 {
 411              		.loc 1 243 0 discriminator 1
 412 00b2 0028     		cmp	r0, #0
 413 00b4 E4D1     		bne	.L33
 414 00b6 D2E7     		b	.L34
 415              	.LVL9:
 416              	.L31:
 220:.\Generated_Source\PSoC5/SD_CLK.c ****                 CY_SET_REG16(SD_CLK_DIV_PTR, clkDivider);
 417              		.loc 1 220 0
 418 00b8 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 419 00ba 43F04003 		orr	r3, r3, #64
 420 00be 2B70     		strb	r3, [r5]
 221:.\Generated_Source\PSoC5/SD_CLK.c ****             }
 421              		.loc 1 221 0
 422 00c0 3080     		strh	r0, [r6]	@ movhi
 423 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 424              	.LVL10:
 425              	.L51:
 426              		.align	2
 427              	.L50:
 428 00c4 82400040 		.word	1073758338
 429 00c8 80400040 		.word	1073758336
 430 00cc A2430040 		.word	1073759138
 431 00d0 14400040 		.word	1073758228
 432 00d4 10400040 		.word	1073758224
 433 00d8 08400040 		.word	1073758216
 434 00dc 01400040 		.word	1073758209
 435 00e0 02400040 		.word	1073758210
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 18


 436              		.cfi_endproc
 437              	.LFE4:
 438              		.size	SD_CLK_SetDividerRegister, .-SD_CLK_SetDividerRegister
 439              		.section	.text.SD_CLK_GetDividerRegister,"ax",%progbits
 440              		.align	2
 441              		.global	SD_CLK_GetDividerRegister
 442              		.thumb
 443              		.thumb_func
 444              		.type	SD_CLK_GetDividerRegister, %function
 445              	SD_CLK_GetDividerRegister:
 446              	.LFB5:
 298:.\Generated_Source\PSoC5/SD_CLK.c ****     return CY_GET_REG16(SD_CLK_DIV_PTR);
 447              		.loc 1 298 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 452              		.loc 1 299 0
 453 0000 014B     		ldr	r3, .L53
 454 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/SD_CLK.c **** 
 455              		.loc 1 300 0
 456 0004 80B2     		uxth	r0, r0
 457 0006 7047     		bx	lr
 458              	.L54:
 459              		.align	2
 460              	.L53:
 461 0008 80400040 		.word	1073758336
 462              		.cfi_endproc
 463              	.LFE5:
 464              		.size	SD_CLK_GetDividerRegister, .-SD_CLK_GetDividerRegister
 465              		.section	.text.SD_CLK_SetModeRegister,"ax",%progbits
 466              		.align	2
 467              		.global	SD_CLK_SetModeRegister
 468              		.thumb
 469              		.thumb_func
 470              		.type	SD_CLK_SetModeRegister, %function
 471              	SD_CLK_SetModeRegister:
 472              	.LFB6:
 333:.\Generated_Source\PSoC5/SD_CLK.c ****     SD_CLK_MOD_SRC |= modeBitMask & (uint8)SD_CLK_MODE_MASK;
 473              		.loc 1 333 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478              	.LVL11:
 334:.\Generated_Source\PSoC5/SD_CLK.c **** }
 479              		.loc 1 334 0
 480 0000 034A     		ldr	r2, .L56
 481 0002 00F0F800 		and	r0, r0, #248
 482              	.LVL12:
 483 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 484 0008 1843     		orrs	r0, r0, r3
 485 000a 1070     		strb	r0, [r2]
 486 000c 7047     		bx	lr
 487              	.L57:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 19


 488 000e 00BF     		.align	2
 489              	.L56:
 490 0010 82400040 		.word	1073758338
 491              		.cfi_endproc
 492              	.LFE6:
 493              		.size	SD_CLK_SetModeRegister, .-SD_CLK_SetModeRegister
 494              		.section	.text.SD_CLK_ClearModeRegister,"ax",%progbits
 495              		.align	2
 496              		.global	SD_CLK_ClearModeRegister
 497              		.thumb
 498              		.thumb_func
 499              		.type	SD_CLK_ClearModeRegister, %function
 500              	SD_CLK_ClearModeRegister:
 501              	.LFB7:
 368:.\Generated_Source\PSoC5/SD_CLK.c ****     SD_CLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(SD_CLK_MODE_MASK));
 502              		.loc 1 368 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 507              	.LVL13:
 369:.\Generated_Source\PSoC5/SD_CLK.c **** }
 508              		.loc 1 369 0
 509 0000 C043     		mvns	r0, r0
 510              	.LVL14:
 511 0002 034B     		ldr	r3, .L59
 512 0004 40F00700 		orr	r0, r0, #7
 513 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 514 000a 1040     		ands	r0, r0, r2
 515 000c 1870     		strb	r0, [r3]
 516 000e 7047     		bx	lr
 517              	.L60:
 518              		.align	2
 519              	.L59:
 520 0010 82400040 		.word	1073758338
 521              		.cfi_endproc
 522              	.LFE7:
 523              		.size	SD_CLK_ClearModeRegister, .-SD_CLK_ClearModeRegister
 524              		.section	.text.SD_CLK_GetModeRegister,"ax",%progbits
 525              		.align	2
 526              		.global	SD_CLK_GetModeRegister
 527              		.thumb
 528              		.thumb_func
 529              		.type	SD_CLK_GetModeRegister, %function
 530              	SD_CLK_GetModeRegister:
 531              	.LFB8:
 389:.\Generated_Source\PSoC5/SD_CLK.c ****     return SD_CLK_MOD_SRC & (uint8)(SD_CLK_MODE_MASK);
 532              		.loc 1 389 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/SD_CLK.c **** }
 537              		.loc 1 390 0
 538 0000 024B     		ldr	r3, .L62
 539 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/SD_CLK.c **** 
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 20


 540              		.loc 1 391 0
 541 0004 00F0F800 		and	r0, r0, #248
 542 0008 7047     		bx	lr
 543              	.L63:
 544 000a 00BF     		.align	2
 545              	.L62:
 546 000c 82400040 		.word	1073758338
 547              		.cfi_endproc
 548              	.LFE8:
 549              		.size	SD_CLK_GetModeRegister, .-SD_CLK_GetModeRegister
 550              		.section	.text.SD_CLK_SetSourceRegister,"ax",%progbits
 551              		.align	2
 552              		.global	SD_CLK_SetSourceRegister
 553              		.thumb
 554              		.thumb_func
 555              		.type	SD_CLK_SetSourceRegister, %function
 556              	SD_CLK_SetSourceRegister:
 557              	.LFB9:
 420:.\Generated_Source\PSoC5/SD_CLK.c ****     uint16 currDiv = SD_CLK_GetDividerRegister();
 558              		.loc 1 420 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563              	.LVL15:
 564              	.LBB24:
 565              	.LBB25:
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 566              		.loc 1 299 0
 567 0000 134B     		ldr	r3, .L72
 568              	.LBE25:
 569              	.LBE24:
 570              	.LBB28:
 571              	.LBB29:
 572              		.loc 1 466 0
 573 0002 144A     		ldr	r2, .L72+4
 574              	.LBE29:
 575              	.LBE28:
 576              	.LBB31:
 577              	.LBB26:
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 578              		.loc 1 299 0
 579 0004 1B88     		ldrh	r3, [r3]
 580              	.LBE26:
 581              	.LBE31:
 582              	.LBB32:
 583              	.LBB30:
 584              		.loc 1 466 0
 585 0006 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 586              	.LBE30:
 587              	.LBE32:
 588              	.LBB33:
 589              	.LBB27:
 299:.\Generated_Source\PSoC5/SD_CLK.c **** }
 590              		.loc 1 299 0
 591 0008 9BB2     		uxth	r3, r3
 592              	.LBE27:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 21


 593              	.LBE33:
 424:.\Generated_Source\PSoC5/SD_CLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 594              		.loc 1 424 0
 595 000a 4907     		lsls	r1, r1, #29
 596 000c 08D0     		beq	.L65
 424:.\Generated_Source\PSoC5/SD_CLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 597              		.loc 1 424 0 is_stmt 0 discriminator 1
 598 000e 00B9     		cbnz	r0, .L66
 425:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 599              		.loc 1 425 0 is_stmt 1
 600 0010 A3B1     		cbz	r3, .L71
 601              	.L66:
 445:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 602              		.loc 1 445 0
 603 0012 104A     		ldr	r2, .L72+4
 604 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/SD_CLK.c ****             (SD_CLK_MOD_SRC & (uint8)(~SD_CLK_SRC_SEL_MSK)) | clkSource;
 605              		.loc 1 444 0
 606 0016 03F0F803 		and	r3, r3, #248
 607 001a 1843     		orrs	r0, r0, r3
 608              	.LVL16:
 609 001c 1070     		strb	r0, [r2]
 610 001e 7047     		bx	lr
 611              	.LVL17:
 612              	.L65:
 433:.\Generated_Source\PSoC5/SD_CLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 613              		.loc 1 433 0 discriminator 1
 614 0020 0028     		cmp	r0, #0
 615 0022 F6D0     		beq	.L66
 434:.\Generated_Source\PSoC5/SD_CLK.c ****     {
 616              		.loc 1 434 0
 617 0024 002B     		cmp	r3, #0
 618 0026 F4D1     		bne	.L66
 439:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 619              		.loc 1 439 0
 620 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/SD_CLK.c ****             (SD_CLK_MOD_SRC & (uint8)(~SD_CLK_SRC_SEL_MSK)) | clkSource;
 621              		.loc 1 438 0
 622 002a 03F0F803 		and	r3, r3, #248
 623 002e 1843     		orrs	r0, r0, r3
 624              	.LVL18:
 625 0030 1070     		strb	r0, [r2]
 440:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 626              		.loc 1 440 0
 627 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 628 0034 03F0BF03 		and	r3, r3, #191
 629 0038 1370     		strb	r3, [r2]
 630 003a 7047     		bx	lr
 631              	.LVL19:
 632              	.L71:
 429:.\Generated_Source\PSoC5/SD_CLK.c ****         SD_CLK_MOD_SRC =
 633              		.loc 1 429 0
 634 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 635 003e 43F04003 		orr	r3, r3, #64
 636 0042 1370     		strb	r3, [r2]
 431:.\Generated_Source\PSoC5/SD_CLK.c ****     }
 637              		.loc 1 431 0
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 22


 638 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/SD_CLK.c ****             (SD_CLK_MOD_SRC & (uint8)(~SD_CLK_SRC_SEL_MSK)) | clkSource;
 639              		.loc 1 430 0
 640 0046 03F0F803 		and	r3, r3, #248
 641 004a 1370     		strb	r3, [r2]
 642 004c 7047     		bx	lr
 643              	.L73:
 644 004e 00BF     		.align	2
 645              	.L72:
 646 0050 80400040 		.word	1073758336
 647 0054 82400040 		.word	1073758338
 648              		.cfi_endproc
 649              	.LFE9:
 650              		.size	SD_CLK_SetSourceRegister, .-SD_CLK_SetSourceRegister
 651              		.section	.text.SD_CLK_GetSourceRegister,"ax",%progbits
 652              		.align	2
 653              		.global	SD_CLK_GetSourceRegister
 654              		.thumb
 655              		.thumb_func
 656              		.type	SD_CLK_GetSourceRegister, %function
 657              	SD_CLK_GetSourceRegister:
 658              	.LFB10:
 465:.\Generated_Source\PSoC5/SD_CLK.c ****     return SD_CLK_MOD_SRC & SD_CLK_SRC_SEL_MSK;
 659              		.loc 1 465 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664              		.loc 1 466 0
 665 0000 024B     		ldr	r3, .L75
 666 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/SD_CLK.c **** }
 667              		.loc 1 467 0
 668 0004 00F00700 		and	r0, r0, #7
 669 0008 7047     		bx	lr
 670              	.L76:
 671 000a 00BF     		.align	2
 672              	.L75:
 673 000c 82400040 		.word	1073758338
 674              		.cfi_endproc
 675              	.LFE10:
 676              		.size	SD_CLK_GetSourceRegister, .-SD_CLK_GetSourceRegister
 677              		.text
 678              	.Letext0:
 679              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 680              		.section	.debug_info,"",%progbits
 681              	.Ldebug_info0:
 682 0000 97020000 		.4byte	0x297
 683 0004 0400     		.2byte	0x4
 684 0006 00000000 		.4byte	.Ldebug_abbrev0
 685 000a 04       		.byte	0x4
 686 000b 01       		.uleb128 0x1
 687 000c 61020000 		.4byte	.LASF36
 688 0010 01       		.byte	0x1
 689 0011 93010000 		.4byte	.LASF37
 690 0015 85000000 		.4byte	.LASF38
 691 0019 90000000 		.4byte	.Ldebug_ranges0+0x90
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 23


 692 001d 00000000 		.4byte	0
 693 0021 00000000 		.4byte	.Ldebug_line0
 694 0025 02       		.uleb128 0x2
 695 0026 01       		.byte	0x1
 696 0027 06       		.byte	0x6
 697 0028 44010000 		.4byte	.LASF0
 698 002c 02       		.uleb128 0x2
 699 002d 01       		.byte	0x1
 700 002e 08       		.byte	0x8
 701 002f 11010000 		.4byte	.LASF1
 702 0033 02       		.uleb128 0x2
 703 0034 02       		.byte	0x2
 704 0035 05       		.byte	0x5
 705 0036 28000000 		.4byte	.LASF2
 706 003a 02       		.uleb128 0x2
 707 003b 02       		.byte	0x2
 708 003c 07       		.byte	0x7
 709 003d 80010000 		.4byte	.LASF3
 710 0041 02       		.uleb128 0x2
 711 0042 04       		.byte	0x4
 712 0043 05       		.byte	0x5
 713 0044 F7000000 		.4byte	.LASF4
 714 0048 02       		.uleb128 0x2
 715 0049 04       		.byte	0x4
 716 004a 07       		.byte	0x7
 717 004b F0010000 		.4byte	.LASF5
 718 004f 02       		.uleb128 0x2
 719 0050 08       		.byte	0x8
 720 0051 05       		.byte	0x5
 721 0052 D2000000 		.4byte	.LASF6
 722 0056 02       		.uleb128 0x2
 723 0057 08       		.byte	0x8
 724 0058 07       		.byte	0x7
 725 0059 50010000 		.4byte	.LASF7
 726 005d 03       		.uleb128 0x3
 727 005e 04       		.byte	0x4
 728 005f 05       		.byte	0x5
 729 0060 696E7400 		.ascii	"int\000"
 730 0064 02       		.uleb128 0x2
 731 0065 04       		.byte	0x4
 732 0066 07       		.byte	0x7
 733 0067 67010000 		.4byte	.LASF8
 734 006b 04       		.uleb128 0x4
 735 006c 55000000 		.4byte	.LASF9
 736 0070 02       		.byte	0x2
 737 0071 9201     		.2byte	0x192
 738 0073 2C000000 		.4byte	0x2c
 739 0077 04       		.uleb128 0x4
 740 0078 3F000000 		.4byte	.LASF10
 741 007c 02       		.byte	0x2
 742 007d 9301     		.2byte	0x193
 743 007f 3A000000 		.4byte	0x3a
 744 0083 02       		.uleb128 0x2
 745 0084 04       		.byte	0x4
 746 0085 04       		.byte	0x4
 747 0086 7F000000 		.4byte	.LASF11
 748 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 24


 749 008b 08       		.byte	0x8
 750 008c 04       		.byte	0x4
 751 008d 02020000 		.4byte	.LASF12
 752 0091 02       		.uleb128 0x2
 753 0092 01       		.byte	0x1
 754 0093 08       		.byte	0x8
 755 0094 B5010000 		.4byte	.LASF13
 756 0098 04       		.uleb128 0x4
 757 0099 EB010000 		.4byte	.LASF14
 758 009d 02       		.byte	0x2
 759 009e 3C02     		.2byte	0x23c
 760 00a0 A4000000 		.4byte	0xa4
 761 00a4 05       		.uleb128 0x5
 762 00a5 6B000000 		.4byte	0x6b
 763 00a9 04       		.uleb128 0x4
 764 00aa 22000000 		.4byte	.LASF15
 765 00ae 02       		.byte	0x2
 766 00af 3D02     		.2byte	0x23d
 767 00b1 B5000000 		.4byte	0xb5
 768 00b5 05       		.uleb128 0x5
 769 00b6 77000000 		.4byte	0x77
 770 00ba 06       		.uleb128 0x6
 771 00bb 66000000 		.4byte	.LASF16
 772 00bf 01       		.byte	0x1
 773 00c0 D001     		.2byte	0x1d0
 774 00c2 6B000000 		.4byte	0x6b
 775 00c6 01       		.byte	0x1
 776 00c7 06       		.uleb128 0x6
 777 00c8 00000000 		.4byte	.LASF17
 778 00cc 01       		.byte	0x1
 779 00cd 2901     		.2byte	0x129
 780 00cf 77000000 		.4byte	0x77
 781 00d3 01       		.byte	0x1
 782 00d4 07       		.uleb128 0x7
 783 00d5 32000000 		.4byte	.LASF18
 784 00d9 01       		.byte	0x1
 785 00da 2D       		.byte	0x2d
 786 00db 00000000 		.4byte	.LFB0
 787 00df 20000000 		.4byte	.LFE0-.LFB0
 788 00e3 01       		.uleb128 0x1
 789 00e4 9C       		.byte	0x9c
 790 00e5 07       		.uleb128 0x7
 791 00e6 74010000 		.4byte	.LASF19
 792 00ea 01       		.byte	0x1
 793 00eb 47       		.byte	0x47
 794 00ec 00000000 		.4byte	.LFB1
 795 00f0 20000000 		.4byte	.LFE1-.LFB1
 796 00f4 01       		.uleb128 0x1
 797 00f5 9C       		.byte	0x9c
 798 00f6 08       		.uleb128 0x8
 799 00f7 00010000 		.4byte	.LASF20
 800 00fb 01       		.byte	0x1
 801 00fc 64       		.byte	0x64
 802 00fd 00000000 		.4byte	.LFB2
 803 0101 78000000 		.4byte	.LFE2-.LFB2
 804 0105 01       		.uleb128 0x1
 805 0106 9C       		.byte	0x9c
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 25


 806 0107 21010000 		.4byte	0x121
 807 010b 09       		.uleb128 0x9
 808 010c 00000000 		.4byte	.Ldebug_ranges0+0
 809 0110 0A       		.uleb128 0xa
 810 0111 E0010000 		.4byte	.LASF26
 811 0115 01       		.byte	0x1
 812 0116 69       		.byte	0x69
 813 0117 77000000 		.4byte	0x77
 814 011b 00000000 		.4byte	.LLST0
 815 011f 00       		.byte	0
 816 0120 00       		.byte	0
 817 0121 08       		.uleb128 0x8
 818 0122 BA010000 		.4byte	.LASF21
 819 0126 01       		.byte	0x1
 820 0127 9D       		.byte	0x9d
 821 0128 00000000 		.4byte	.LFB3
 822 012c 1C000000 		.4byte	.LFE3-.LFB3
 823 0130 01       		.uleb128 0x1
 824 0131 9C       		.byte	0x9c
 825 0132 44010000 		.4byte	0x144
 826 0136 0B       		.uleb128 0xb
 827 0137 09020000 		.4byte	.LASF23
 828 013b 01       		.byte	0x1
 829 013c 9D       		.byte	0x9d
 830 013d 6B000000 		.4byte	0x6b
 831 0141 01       		.uleb128 0x1
 832 0142 50       		.byte	0x50
 833 0143 00       		.byte	0
 834 0144 08       		.uleb128 0x8
 835 0145 47020000 		.4byte	.LASF22
 836 0149 01       		.byte	0x1
 837 014a C1       		.byte	0xc1
 838 014b 00000000 		.4byte	.LFB4
 839 014f E4000000 		.4byte	.LFE4-.LFB4
 840 0153 01       		.uleb128 0x1
 841 0154 9C       		.byte	0x9c
 842 0155 B9010000 		.4byte	0x1b9
 843 0159 0B       		.uleb128 0xb
 844 015a 5B000000 		.4byte	.LASF24
 845 015e 01       		.byte	0x1
 846 015f C1       		.byte	0xc1
 847 0160 77000000 		.4byte	0x77
 848 0164 01       		.uleb128 0x1
 849 0165 50       		.byte	0x50
 850 0166 0C       		.uleb128 0xc
 851 0167 46000000 		.4byte	.LASF25
 852 016b 01       		.byte	0x1
 853 016c C1       		.byte	0xc1
 854 016d 6B000000 		.4byte	0x6b
 855 0171 13000000 		.4byte	.LLST1
 856 0175 0A       		.uleb128 0xa
 857 0176 28020000 		.4byte	.LASF27
 858 017a 01       		.byte	0x1
 859 017b C4       		.byte	0xc4
 860 017c 6B000000 		.4byte	0x6b
 861 0180 3F000000 		.4byte	.LLST2
 862 0184 0D       		.uleb128 0xd
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 26


 863 0185 D8010000 		.4byte	.LASF28
 864 0189 01       		.byte	0x1
 865 018a C6       		.byte	0xc6
 866 018b 6B000000 		.4byte	0x6b
 867 018f 0D       		.uleb128 0xd
 868 0190 E0010000 		.4byte	.LASF26
 869 0194 01       		.byte	0x1
 870 0195 C7       		.byte	0xc7
 871 0196 77000000 		.4byte	0x77
 872 019a 0E       		.uleb128 0xe
 873 019b BA000000 		.4byte	0xba
 874 019f 02000000 		.4byte	.LBB12
 875 01a3 18000000 		.4byte	.Ldebug_ranges0+0x18
 876 01a7 01       		.byte	0x1
 877 01a8 C6       		.byte	0xc6
 878 01a9 0E       		.uleb128 0xe
 879 01aa C7000000 		.4byte	0xc7
 880 01ae 04000000 		.4byte	.LBB16
 881 01b2 38000000 		.4byte	.Ldebug_ranges0+0x38
 882 01b6 01       		.byte	0x1
 883 01b7 C7       		.byte	0xc7
 884 01b8 00       		.byte	0
 885 01b9 0F       		.uleb128 0xf
 886 01ba C7000000 		.4byte	0xc7
 887 01be 00000000 		.4byte	.LFB5
 888 01c2 0C000000 		.4byte	.LFE5-.LFB5
 889 01c6 01       		.uleb128 0x1
 890 01c7 9C       		.byte	0x9c
 891 01c8 10       		.uleb128 0x10
 892 01c9 30020000 		.4byte	.LASF29
 893 01cd 01       		.byte	0x1
 894 01ce 4C01     		.2byte	0x14c
 895 01d0 00000000 		.4byte	.LFB6
 896 01d4 14000000 		.4byte	.LFE6-.LFB6
 897 01d8 01       		.uleb128 0x1
 898 01d9 9C       		.byte	0x9c
 899 01da EF010000 		.4byte	0x1ef
 900 01de 11       		.uleb128 0x11
 901 01df 1F010000 		.4byte	.LASF30
 902 01e3 01       		.byte	0x1
 903 01e4 4C01     		.2byte	0x14c
 904 01e6 6B000000 		.4byte	0x6b
 905 01ea 65000000 		.4byte	.LLST3
 906 01ee 00       		.byte	0
 907 01ef 10       		.uleb128 0x10
 908 01f0 2B010000 		.4byte	.LASF31
 909 01f4 01       		.byte	0x1
 910 01f5 6F01     		.2byte	0x16f
 911 01f7 00000000 		.4byte	.LFB7
 912 01fb 14000000 		.4byte	.LFE7-.LFB7
 913 01ff 01       		.uleb128 0x1
 914 0200 9C       		.byte	0x9c
 915 0201 16020000 		.4byte	0x216
 916 0205 11       		.uleb128 0x11
 917 0206 1F010000 		.4byte	.LASF30
 918 020a 01       		.byte	0x1
 919 020b 6F01     		.2byte	0x16f
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 27


 920 020d 6B000000 		.4byte	0x6b
 921 0211 86000000 		.4byte	.LLST4
 922 0215 00       		.byte	0
 923 0216 12       		.uleb128 0x12
 924 0217 E0000000 		.4byte	.LASF39
 925 021b 01       		.byte	0x1
 926 021c 8401     		.2byte	0x184
 927 021e 6B000000 		.4byte	0x6b
 928 0222 00000000 		.4byte	.LFB8
 929 0226 10000000 		.4byte	.LFE8-.LFB8
 930 022a 01       		.uleb128 0x1
 931 022b 9C       		.byte	0x9c
 932 022c 10       		.uleb128 0x10
 933 022d 0F020000 		.4byte	.LASF32
 934 0231 01       		.byte	0x1
 935 0232 A301     		.2byte	0x1a3
 936 0234 00000000 		.4byte	.LFB9
 937 0238 58000000 		.4byte	.LFE9-.LFB9
 938 023c 01       		.uleb128 0x1
 939 023d 9C       		.byte	0x9c
 940 023e 8B020000 		.4byte	0x28b
 941 0242 11       		.uleb128 0x11
 942 0243 CE010000 		.4byte	.LASF33
 943 0247 01       		.byte	0x1
 944 0248 A301     		.2byte	0x1a3
 945 024a 6B000000 		.4byte	0x6b
 946 024e A7000000 		.4byte	.LLST5
 947 0252 13       		.uleb128 0x13
 948 0253 1A000000 		.4byte	.LASF34
 949 0257 01       		.byte	0x1
 950 0258 A501     		.2byte	0x1a5
 951 025a 77000000 		.4byte	0x77
 952 025e 13       		.uleb128 0x13
 953 025f 4E000000 		.4byte	.LASF35
 954 0263 01       		.byte	0x1
 955 0264 A601     		.2byte	0x1a6
 956 0266 6B000000 		.4byte	0x6b
 957 026a 14       		.uleb128 0x14
 958 026b C7000000 		.4byte	0xc7
 959 026f 00000000 		.4byte	.LBB24
 960 0273 58000000 		.4byte	.Ldebug_ranges0+0x58
 961 0277 01       		.byte	0x1
 962 0278 A501     		.2byte	0x1a5
 963 027a 14       		.uleb128 0x14
 964 027b BA000000 		.4byte	0xba
 965 027f 02000000 		.4byte	.LBB28
 966 0283 78000000 		.4byte	.Ldebug_ranges0+0x78
 967 0287 01       		.byte	0x1
 968 0288 A601     		.2byte	0x1a6
 969 028a 00       		.byte	0
 970 028b 0F       		.uleb128 0xf
 971 028c BA000000 		.4byte	0xba
 972 0290 00000000 		.4byte	.LFB10
 973 0294 10000000 		.4byte	.LFE10-.LFB10
 974 0298 01       		.uleb128 0x1
 975 0299 9C       		.byte	0x9c
 976 029a 00       		.byte	0
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 28


 977              		.section	.debug_abbrev,"",%progbits
 978              	.Ldebug_abbrev0:
 979 0000 01       		.uleb128 0x1
 980 0001 11       		.uleb128 0x11
 981 0002 01       		.byte	0x1
 982 0003 25       		.uleb128 0x25
 983 0004 0E       		.uleb128 0xe
 984 0005 13       		.uleb128 0x13
 985 0006 0B       		.uleb128 0xb
 986 0007 03       		.uleb128 0x3
 987 0008 0E       		.uleb128 0xe
 988 0009 1B       		.uleb128 0x1b
 989 000a 0E       		.uleb128 0xe
 990 000b 55       		.uleb128 0x55
 991 000c 17       		.uleb128 0x17
 992 000d 11       		.uleb128 0x11
 993 000e 01       		.uleb128 0x1
 994 000f 10       		.uleb128 0x10
 995 0010 17       		.uleb128 0x17
 996 0011 00       		.byte	0
 997 0012 00       		.byte	0
 998 0013 02       		.uleb128 0x2
 999 0014 24       		.uleb128 0x24
 1000 0015 00       		.byte	0
 1001 0016 0B       		.uleb128 0xb
 1002 0017 0B       		.uleb128 0xb
 1003 0018 3E       		.uleb128 0x3e
 1004 0019 0B       		.uleb128 0xb
 1005 001a 03       		.uleb128 0x3
 1006 001b 0E       		.uleb128 0xe
 1007 001c 00       		.byte	0
 1008 001d 00       		.byte	0
 1009 001e 03       		.uleb128 0x3
 1010 001f 24       		.uleb128 0x24
 1011 0020 00       		.byte	0
 1012 0021 0B       		.uleb128 0xb
 1013 0022 0B       		.uleb128 0xb
 1014 0023 3E       		.uleb128 0x3e
 1015 0024 0B       		.uleb128 0xb
 1016 0025 03       		.uleb128 0x3
 1017 0026 08       		.uleb128 0x8
 1018 0027 00       		.byte	0
 1019 0028 00       		.byte	0
 1020 0029 04       		.uleb128 0x4
 1021 002a 16       		.uleb128 0x16
 1022 002b 00       		.byte	0
 1023 002c 03       		.uleb128 0x3
 1024 002d 0E       		.uleb128 0xe
 1025 002e 3A       		.uleb128 0x3a
 1026 002f 0B       		.uleb128 0xb
 1027 0030 3B       		.uleb128 0x3b
 1028 0031 05       		.uleb128 0x5
 1029 0032 49       		.uleb128 0x49
 1030 0033 13       		.uleb128 0x13
 1031 0034 00       		.byte	0
 1032 0035 00       		.byte	0
 1033 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 29


 1034 0037 35       		.uleb128 0x35
 1035 0038 00       		.byte	0
 1036 0039 49       		.uleb128 0x49
 1037 003a 13       		.uleb128 0x13
 1038 003b 00       		.byte	0
 1039 003c 00       		.byte	0
 1040 003d 06       		.uleb128 0x6
 1041 003e 2E       		.uleb128 0x2e
 1042 003f 00       		.byte	0
 1043 0040 3F       		.uleb128 0x3f
 1044 0041 19       		.uleb128 0x19
 1045 0042 03       		.uleb128 0x3
 1046 0043 0E       		.uleb128 0xe
 1047 0044 3A       		.uleb128 0x3a
 1048 0045 0B       		.uleb128 0xb
 1049 0046 3B       		.uleb128 0x3b
 1050 0047 05       		.uleb128 0x5
 1051 0048 27       		.uleb128 0x27
 1052 0049 19       		.uleb128 0x19
 1053 004a 49       		.uleb128 0x49
 1054 004b 13       		.uleb128 0x13
 1055 004c 20       		.uleb128 0x20
 1056 004d 0B       		.uleb128 0xb
 1057 004e 00       		.byte	0
 1058 004f 00       		.byte	0
 1059 0050 07       		.uleb128 0x7
 1060 0051 2E       		.uleb128 0x2e
 1061 0052 00       		.byte	0
 1062 0053 3F       		.uleb128 0x3f
 1063 0054 19       		.uleb128 0x19
 1064 0055 03       		.uleb128 0x3
 1065 0056 0E       		.uleb128 0xe
 1066 0057 3A       		.uleb128 0x3a
 1067 0058 0B       		.uleb128 0xb
 1068 0059 3B       		.uleb128 0x3b
 1069 005a 0B       		.uleb128 0xb
 1070 005b 27       		.uleb128 0x27
 1071 005c 19       		.uleb128 0x19
 1072 005d 11       		.uleb128 0x11
 1073 005e 01       		.uleb128 0x1
 1074 005f 12       		.uleb128 0x12
 1075 0060 06       		.uleb128 0x6
 1076 0061 40       		.uleb128 0x40
 1077 0062 18       		.uleb128 0x18
 1078 0063 9742     		.uleb128 0x2117
 1079 0065 19       		.uleb128 0x19
 1080 0066 00       		.byte	0
 1081 0067 00       		.byte	0
 1082 0068 08       		.uleb128 0x8
 1083 0069 2E       		.uleb128 0x2e
 1084 006a 01       		.byte	0x1
 1085 006b 3F       		.uleb128 0x3f
 1086 006c 19       		.uleb128 0x19
 1087 006d 03       		.uleb128 0x3
 1088 006e 0E       		.uleb128 0xe
 1089 006f 3A       		.uleb128 0x3a
 1090 0070 0B       		.uleb128 0xb
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 30


 1091 0071 3B       		.uleb128 0x3b
 1092 0072 0B       		.uleb128 0xb
 1093 0073 27       		.uleb128 0x27
 1094 0074 19       		.uleb128 0x19
 1095 0075 11       		.uleb128 0x11
 1096 0076 01       		.uleb128 0x1
 1097 0077 12       		.uleb128 0x12
 1098 0078 06       		.uleb128 0x6
 1099 0079 40       		.uleb128 0x40
 1100 007a 18       		.uleb128 0x18
 1101 007b 9742     		.uleb128 0x2117
 1102 007d 19       		.uleb128 0x19
 1103 007e 01       		.uleb128 0x1
 1104 007f 13       		.uleb128 0x13
 1105 0080 00       		.byte	0
 1106 0081 00       		.byte	0
 1107 0082 09       		.uleb128 0x9
 1108 0083 0B       		.uleb128 0xb
 1109 0084 01       		.byte	0x1
 1110 0085 55       		.uleb128 0x55
 1111 0086 17       		.uleb128 0x17
 1112 0087 00       		.byte	0
 1113 0088 00       		.byte	0
 1114 0089 0A       		.uleb128 0xa
 1115 008a 34       		.uleb128 0x34
 1116 008b 00       		.byte	0
 1117 008c 03       		.uleb128 0x3
 1118 008d 0E       		.uleb128 0xe
 1119 008e 3A       		.uleb128 0x3a
 1120 008f 0B       		.uleb128 0xb
 1121 0090 3B       		.uleb128 0x3b
 1122 0091 0B       		.uleb128 0xb
 1123 0092 49       		.uleb128 0x49
 1124 0093 13       		.uleb128 0x13
 1125 0094 02       		.uleb128 0x2
 1126 0095 17       		.uleb128 0x17
 1127 0096 00       		.byte	0
 1128 0097 00       		.byte	0
 1129 0098 0B       		.uleb128 0xb
 1130 0099 05       		.uleb128 0x5
 1131 009a 00       		.byte	0
 1132 009b 03       		.uleb128 0x3
 1133 009c 0E       		.uleb128 0xe
 1134 009d 3A       		.uleb128 0x3a
 1135 009e 0B       		.uleb128 0xb
 1136 009f 3B       		.uleb128 0x3b
 1137 00a0 0B       		.uleb128 0xb
 1138 00a1 49       		.uleb128 0x49
 1139 00a2 13       		.uleb128 0x13
 1140 00a3 02       		.uleb128 0x2
 1141 00a4 18       		.uleb128 0x18
 1142 00a5 00       		.byte	0
 1143 00a6 00       		.byte	0
 1144 00a7 0C       		.uleb128 0xc
 1145 00a8 05       		.uleb128 0x5
 1146 00a9 00       		.byte	0
 1147 00aa 03       		.uleb128 0x3
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 31


 1148 00ab 0E       		.uleb128 0xe
 1149 00ac 3A       		.uleb128 0x3a
 1150 00ad 0B       		.uleb128 0xb
 1151 00ae 3B       		.uleb128 0x3b
 1152 00af 0B       		.uleb128 0xb
 1153 00b0 49       		.uleb128 0x49
 1154 00b1 13       		.uleb128 0x13
 1155 00b2 02       		.uleb128 0x2
 1156 00b3 17       		.uleb128 0x17
 1157 00b4 00       		.byte	0
 1158 00b5 00       		.byte	0
 1159 00b6 0D       		.uleb128 0xd
 1160 00b7 34       		.uleb128 0x34
 1161 00b8 00       		.byte	0
 1162 00b9 03       		.uleb128 0x3
 1163 00ba 0E       		.uleb128 0xe
 1164 00bb 3A       		.uleb128 0x3a
 1165 00bc 0B       		.uleb128 0xb
 1166 00bd 3B       		.uleb128 0x3b
 1167 00be 0B       		.uleb128 0xb
 1168 00bf 49       		.uleb128 0x49
 1169 00c0 13       		.uleb128 0x13
 1170 00c1 00       		.byte	0
 1171 00c2 00       		.byte	0
 1172 00c3 0E       		.uleb128 0xe
 1173 00c4 1D       		.uleb128 0x1d
 1174 00c5 00       		.byte	0
 1175 00c6 31       		.uleb128 0x31
 1176 00c7 13       		.uleb128 0x13
 1177 00c8 52       		.uleb128 0x52
 1178 00c9 01       		.uleb128 0x1
 1179 00ca 55       		.uleb128 0x55
 1180 00cb 17       		.uleb128 0x17
 1181 00cc 58       		.uleb128 0x58
 1182 00cd 0B       		.uleb128 0xb
 1183 00ce 59       		.uleb128 0x59
 1184 00cf 0B       		.uleb128 0xb
 1185 00d0 00       		.byte	0
 1186 00d1 00       		.byte	0
 1187 00d2 0F       		.uleb128 0xf
 1188 00d3 2E       		.uleb128 0x2e
 1189 00d4 00       		.byte	0
 1190 00d5 31       		.uleb128 0x31
 1191 00d6 13       		.uleb128 0x13
 1192 00d7 11       		.uleb128 0x11
 1193 00d8 01       		.uleb128 0x1
 1194 00d9 12       		.uleb128 0x12
 1195 00da 06       		.uleb128 0x6
 1196 00db 40       		.uleb128 0x40
 1197 00dc 18       		.uleb128 0x18
 1198 00dd 9742     		.uleb128 0x2117
 1199 00df 19       		.uleb128 0x19
 1200 00e0 00       		.byte	0
 1201 00e1 00       		.byte	0
 1202 00e2 10       		.uleb128 0x10
 1203 00e3 2E       		.uleb128 0x2e
 1204 00e4 01       		.byte	0x1
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 32


 1205 00e5 3F       		.uleb128 0x3f
 1206 00e6 19       		.uleb128 0x19
 1207 00e7 03       		.uleb128 0x3
 1208 00e8 0E       		.uleb128 0xe
 1209 00e9 3A       		.uleb128 0x3a
 1210 00ea 0B       		.uleb128 0xb
 1211 00eb 3B       		.uleb128 0x3b
 1212 00ec 05       		.uleb128 0x5
 1213 00ed 27       		.uleb128 0x27
 1214 00ee 19       		.uleb128 0x19
 1215 00ef 11       		.uleb128 0x11
 1216 00f0 01       		.uleb128 0x1
 1217 00f1 12       		.uleb128 0x12
 1218 00f2 06       		.uleb128 0x6
 1219 00f3 40       		.uleb128 0x40
 1220 00f4 18       		.uleb128 0x18
 1221 00f5 9742     		.uleb128 0x2117
 1222 00f7 19       		.uleb128 0x19
 1223 00f8 01       		.uleb128 0x1
 1224 00f9 13       		.uleb128 0x13
 1225 00fa 00       		.byte	0
 1226 00fb 00       		.byte	0
 1227 00fc 11       		.uleb128 0x11
 1228 00fd 05       		.uleb128 0x5
 1229 00fe 00       		.byte	0
 1230 00ff 03       		.uleb128 0x3
 1231 0100 0E       		.uleb128 0xe
 1232 0101 3A       		.uleb128 0x3a
 1233 0102 0B       		.uleb128 0xb
 1234 0103 3B       		.uleb128 0x3b
 1235 0104 05       		.uleb128 0x5
 1236 0105 49       		.uleb128 0x49
 1237 0106 13       		.uleb128 0x13
 1238 0107 02       		.uleb128 0x2
 1239 0108 17       		.uleb128 0x17
 1240 0109 00       		.byte	0
 1241 010a 00       		.byte	0
 1242 010b 12       		.uleb128 0x12
 1243 010c 2E       		.uleb128 0x2e
 1244 010d 00       		.byte	0
 1245 010e 3F       		.uleb128 0x3f
 1246 010f 19       		.uleb128 0x19
 1247 0110 03       		.uleb128 0x3
 1248 0111 0E       		.uleb128 0xe
 1249 0112 3A       		.uleb128 0x3a
 1250 0113 0B       		.uleb128 0xb
 1251 0114 3B       		.uleb128 0x3b
 1252 0115 05       		.uleb128 0x5
 1253 0116 27       		.uleb128 0x27
 1254 0117 19       		.uleb128 0x19
 1255 0118 49       		.uleb128 0x49
 1256 0119 13       		.uleb128 0x13
 1257 011a 11       		.uleb128 0x11
 1258 011b 01       		.uleb128 0x1
 1259 011c 12       		.uleb128 0x12
 1260 011d 06       		.uleb128 0x6
 1261 011e 40       		.uleb128 0x40
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 33


 1262 011f 18       		.uleb128 0x18
 1263 0120 9742     		.uleb128 0x2117
 1264 0122 19       		.uleb128 0x19
 1265 0123 00       		.byte	0
 1266 0124 00       		.byte	0
 1267 0125 13       		.uleb128 0x13
 1268 0126 34       		.uleb128 0x34
 1269 0127 00       		.byte	0
 1270 0128 03       		.uleb128 0x3
 1271 0129 0E       		.uleb128 0xe
 1272 012a 3A       		.uleb128 0x3a
 1273 012b 0B       		.uleb128 0xb
 1274 012c 3B       		.uleb128 0x3b
 1275 012d 05       		.uleb128 0x5
 1276 012e 49       		.uleb128 0x49
 1277 012f 13       		.uleb128 0x13
 1278 0130 00       		.byte	0
 1279 0131 00       		.byte	0
 1280 0132 14       		.uleb128 0x14
 1281 0133 1D       		.uleb128 0x1d
 1282 0134 00       		.byte	0
 1283 0135 31       		.uleb128 0x31
 1284 0136 13       		.uleb128 0x13
 1285 0137 52       		.uleb128 0x52
 1286 0138 01       		.uleb128 0x1
 1287 0139 55       		.uleb128 0x55
 1288 013a 17       		.uleb128 0x17
 1289 013b 58       		.uleb128 0x58
 1290 013c 0B       		.uleb128 0xb
 1291 013d 59       		.uleb128 0x59
 1292 013e 05       		.uleb128 0x5
 1293 013f 00       		.byte	0
 1294 0140 00       		.byte	0
 1295 0141 00       		.byte	0
 1296              		.section	.debug_loc,"",%progbits
 1297              	.Ldebug_loc0:
 1298              	.LLST0:
 1299 0000 2E000000 		.4byte	.LVL0
 1300 0004 5A000000 		.4byte	.LVL1
 1301 0008 0100     		.2byte	0x1
 1302 000a 50       		.byte	0x50
 1303 000b 00000000 		.4byte	0
 1304 000f 00000000 		.4byte	0
 1305              	.LLST1:
 1306 0013 00000000 		.4byte	.LVL3
 1307 0017 98000000 		.4byte	.LVL7
 1308 001b 0100     		.2byte	0x1
 1309 001d 51       		.byte	0x51
 1310 001e 98000000 		.4byte	.LVL7
 1311 0022 A6000000 		.4byte	.LVL8
 1312 0026 0400     		.2byte	0x4
 1313 0028 F3       		.byte	0xf3
 1314 0029 01       		.uleb128 0x1
 1315 002a 51       		.byte	0x51
 1316 002b 9F       		.byte	0x9f
 1317 002c A6000000 		.4byte	.LVL8
 1318 0030 E4000000 		.4byte	.LFE4
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 34


 1319 0034 0100     		.2byte	0x1
 1320 0036 51       		.byte	0x51
 1321 0037 00000000 		.4byte	0
 1322 003b 00000000 		.4byte	0
 1323              	.LLST2:
 1324 003f 1A000000 		.4byte	.LVL4
 1325 0043 32000000 		.4byte	.LVL6
 1326 0047 0500     		.2byte	0x5
 1327 0049 74       		.byte	0x74
 1328 004a 00       		.sleb128 0
 1329 004b 31       		.byte	0x31
 1330 004c 1A       		.byte	0x1a
 1331 004d 9F       		.byte	0x9f
 1332 004e B8000000 		.4byte	.LVL9
 1333 0052 C4000000 		.4byte	.LVL10
 1334 0056 0500     		.2byte	0x5
 1335 0058 74       		.byte	0x74
 1336 0059 00       		.sleb128 0
 1337 005a 31       		.byte	0x31
 1338 005b 1A       		.byte	0x1a
 1339 005c 9F       		.byte	0x9f
 1340 005d 00000000 		.4byte	0
 1341 0061 00000000 		.4byte	0
 1342              	.LLST3:
 1343 0065 00000000 		.4byte	.LVL11
 1344 0069 06000000 		.4byte	.LVL12
 1345 006d 0100     		.2byte	0x1
 1346 006f 50       		.byte	0x50
 1347 0070 06000000 		.4byte	.LVL12
 1348 0074 14000000 		.4byte	.LFE6
 1349 0078 0400     		.2byte	0x4
 1350 007a F3       		.byte	0xf3
 1351 007b 01       		.uleb128 0x1
 1352 007c 50       		.byte	0x50
 1353 007d 9F       		.byte	0x9f
 1354 007e 00000000 		.4byte	0
 1355 0082 00000000 		.4byte	0
 1356              	.LLST4:
 1357 0086 00000000 		.4byte	.LVL13
 1358 008a 02000000 		.4byte	.LVL14
 1359 008e 0100     		.2byte	0x1
 1360 0090 50       		.byte	0x50
 1361 0091 02000000 		.4byte	.LVL14
 1362 0095 14000000 		.4byte	.LFE7
 1363 0099 0400     		.2byte	0x4
 1364 009b F3       		.byte	0xf3
 1365 009c 01       		.uleb128 0x1
 1366 009d 50       		.byte	0x50
 1367 009e 9F       		.byte	0x9f
 1368 009f 00000000 		.4byte	0
 1369 00a3 00000000 		.4byte	0
 1370              	.LLST5:
 1371 00a7 00000000 		.4byte	.LVL15
 1372 00ab 1C000000 		.4byte	.LVL16
 1373 00af 0100     		.2byte	0x1
 1374 00b1 50       		.byte	0x50
 1375 00b2 1C000000 		.4byte	.LVL16
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 35


 1376 00b6 20000000 		.4byte	.LVL17
 1377 00ba 0400     		.2byte	0x4
 1378 00bc F3       		.byte	0xf3
 1379 00bd 01       		.uleb128 0x1
 1380 00be 50       		.byte	0x50
 1381 00bf 9F       		.byte	0x9f
 1382 00c0 20000000 		.4byte	.LVL17
 1383 00c4 30000000 		.4byte	.LVL18
 1384 00c8 0100     		.2byte	0x1
 1385 00ca 50       		.byte	0x50
 1386 00cb 30000000 		.4byte	.LVL18
 1387 00cf 3C000000 		.4byte	.LVL19
 1388 00d3 0400     		.2byte	0x4
 1389 00d5 F3       		.byte	0xf3
 1390 00d6 01       		.uleb128 0x1
 1391 00d7 50       		.byte	0x50
 1392 00d8 9F       		.byte	0x9f
 1393 00d9 3C000000 		.4byte	.LVL19
 1394 00dd 58000000 		.4byte	.LFE9
 1395 00e1 0100     		.2byte	0x1
 1396 00e3 50       		.byte	0x50
 1397 00e4 00000000 		.4byte	0
 1398 00e8 00000000 		.4byte	0
 1399              		.section	.debug_aranges,"",%progbits
 1400 0000 6C000000 		.4byte	0x6c
 1401 0004 0200     		.2byte	0x2
 1402 0006 00000000 		.4byte	.Ldebug_info0
 1403 000a 04       		.byte	0x4
 1404 000b 00       		.byte	0
 1405 000c 0000     		.2byte	0
 1406 000e 0000     		.2byte	0
 1407 0010 00000000 		.4byte	.LFB0
 1408 0014 20000000 		.4byte	.LFE0-.LFB0
 1409 0018 00000000 		.4byte	.LFB1
 1410 001c 20000000 		.4byte	.LFE1-.LFB1
 1411 0020 00000000 		.4byte	.LFB2
 1412 0024 78000000 		.4byte	.LFE2-.LFB2
 1413 0028 00000000 		.4byte	.LFB3
 1414 002c 1C000000 		.4byte	.LFE3-.LFB3
 1415 0030 00000000 		.4byte	.LFB4
 1416 0034 E4000000 		.4byte	.LFE4-.LFB4
 1417 0038 00000000 		.4byte	.LFB5
 1418 003c 0C000000 		.4byte	.LFE5-.LFB5
 1419 0040 00000000 		.4byte	.LFB6
 1420 0044 14000000 		.4byte	.LFE6-.LFB6
 1421 0048 00000000 		.4byte	.LFB7
 1422 004c 14000000 		.4byte	.LFE7-.LFB7
 1423 0050 00000000 		.4byte	.LFB8
 1424 0054 10000000 		.4byte	.LFE8-.LFB8
 1425 0058 00000000 		.4byte	.LFB9
 1426 005c 58000000 		.4byte	.LFE9-.LFB9
 1427 0060 00000000 		.4byte	.LFB10
 1428 0064 10000000 		.4byte	.LFE10-.LFB10
 1429 0068 00000000 		.4byte	0
 1430 006c 00000000 		.4byte	0
 1431              		.section	.debug_ranges,"",%progbits
 1432              	.Ldebug_ranges0:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 36


 1433 0000 08000000 		.4byte	.LBB10
 1434 0004 0A000000 		.4byte	.LBE10
 1435 0008 0C000000 		.4byte	.LBB11
 1436 000c 58000000 		.4byte	.LBE11
 1437 0010 00000000 		.4byte	0
 1438 0014 00000000 		.4byte	0
 1439 0018 02000000 		.4byte	.LBB12
 1440 001c 04000000 		.4byte	.LBE12
 1441 0020 06000000 		.4byte	.LBB20
 1442 0024 08000000 		.4byte	.LBE20
 1443 0028 0A000000 		.4byte	.LBB22
 1444 002c 0E000000 		.4byte	.LBE22
 1445 0030 00000000 		.4byte	0
 1446 0034 00000000 		.4byte	0
 1447 0038 04000000 		.4byte	.LBB16
 1448 003c 06000000 		.4byte	.LBE16
 1449 0040 08000000 		.4byte	.LBB21
 1450 0044 0A000000 		.4byte	.LBE21
 1451 0048 0E000000 		.4byte	.LBB23
 1452 004c 10000000 		.4byte	.LBE23
 1453 0050 00000000 		.4byte	0
 1454 0054 00000000 		.4byte	0
 1455 0058 00000000 		.4byte	.LBB24
 1456 005c 02000000 		.4byte	.LBE24
 1457 0060 04000000 		.4byte	.LBB31
 1458 0064 06000000 		.4byte	.LBE31
 1459 0068 08000000 		.4byte	.LBB33
 1460 006c 0A000000 		.4byte	.LBE33
 1461 0070 00000000 		.4byte	0
 1462 0074 00000000 		.4byte	0
 1463 0078 02000000 		.4byte	.LBB28
 1464 007c 04000000 		.4byte	.LBE28
 1465 0080 06000000 		.4byte	.LBB32
 1466 0084 08000000 		.4byte	.LBE32
 1467 0088 00000000 		.4byte	0
 1468 008c 00000000 		.4byte	0
 1469 0090 00000000 		.4byte	.LFB0
 1470 0094 20000000 		.4byte	.LFE0
 1471 0098 00000000 		.4byte	.LFB1
 1472 009c 20000000 		.4byte	.LFE1
 1473 00a0 00000000 		.4byte	.LFB2
 1474 00a4 78000000 		.4byte	.LFE2
 1475 00a8 00000000 		.4byte	.LFB3
 1476 00ac 1C000000 		.4byte	.LFE3
 1477 00b0 00000000 		.4byte	.LFB4
 1478 00b4 E4000000 		.4byte	.LFE4
 1479 00b8 00000000 		.4byte	.LFB5
 1480 00bc 0C000000 		.4byte	.LFE5
 1481 00c0 00000000 		.4byte	.LFB6
 1482 00c4 14000000 		.4byte	.LFE6
 1483 00c8 00000000 		.4byte	.LFB7
 1484 00cc 14000000 		.4byte	.LFE7
 1485 00d0 00000000 		.4byte	.LFB8
 1486 00d4 10000000 		.4byte	.LFE8
 1487 00d8 00000000 		.4byte	.LFB9
 1488 00dc 58000000 		.4byte	.LFE9
 1489 00e0 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 37


 1490 00e4 10000000 		.4byte	.LFE10
 1491 00e8 00000000 		.4byte	0
 1492 00ec 00000000 		.4byte	0
 1493              		.section	.debug_line,"",%progbits
 1494              	.Ldebug_line0:
 1495 0000 F4010000 		.section	.debug_str,"MS",%progbits,1
 1495      02005C00 
 1495      00000201 
 1495      FB0E0D00 
 1495      01010101 
 1496              	.LASF17:
 1497 0000 53445F43 		.ascii	"SD_CLK_GetDividerRegister\000"
 1497      4C4B5F47 
 1497      65744469 
 1497      76696465 
 1497      72526567 
 1498              	.LASF34:
 1499 001a 63757272 		.ascii	"currDiv\000"
 1499      44697600 
 1500              	.LASF15:
 1501 0022 72656731 		.ascii	"reg16\000"
 1501      3600
 1502              	.LASF2:
 1503 0028 73686F72 		.ascii	"short int\000"
 1503      7420696E 
 1503      7400
 1504              	.LASF18:
 1505 0032 53445F43 		.ascii	"SD_CLK_Start\000"
 1505      4C4B5F53 
 1505      74617274 
 1505      00
 1506              	.LASF10:
 1507 003f 75696E74 		.ascii	"uint16\000"
 1507      313600
 1508              	.LASF25:
 1509 0046 72657374 		.ascii	"restart\000"
 1509      61727400 
 1510              	.LASF35:
 1511 004e 6F6C6453 		.ascii	"oldSrc\000"
 1511      726300
 1512              	.LASF9:
 1513 0055 75696E74 		.ascii	"uint8\000"
 1513      3800
 1514              	.LASF24:
 1515 005b 636C6B44 		.ascii	"clkDivider\000"
 1515      69766964 
 1515      657200
 1516              	.LASF16:
 1517 0066 53445F43 		.ascii	"SD_CLK_GetSourceRegister\000"
 1517      4C4B5F47 
 1517      6574536F 
 1517      75726365 
 1517      52656769 
 1518              	.LASF11:
 1519 007f 666C6F61 		.ascii	"float\000"
 1519      7400
 1520              	.LASF38:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 38


 1521 0085 443A5C64 		.ascii	"D:\\develop\\projects\\SoundChipLogger\\firmware\\D"
 1521      6576656C 
 1521      6F705C70 
 1521      726F6A65 
 1521      6374735C 
 1522 00b3 4D415344 		.ascii	"MASDSPITest\\DMASDSPITest.cydsn\000"
 1522      53504954 
 1522      6573745C 
 1522      444D4153 
 1522      44535049 
 1523              	.LASF6:
 1524 00d2 6C6F6E67 		.ascii	"long long int\000"
 1524      206C6F6E 
 1524      6720696E 
 1524      7400
 1525              	.LASF39:
 1526 00e0 53445F43 		.ascii	"SD_CLK_GetModeRegister\000"
 1526      4C4B5F47 
 1526      65744D6F 
 1526      64655265 
 1526      67697374 
 1527              	.LASF4:
 1528 00f7 6C6F6E67 		.ascii	"long int\000"
 1528      20696E74 
 1528      00
 1529              	.LASF20:
 1530 0100 53445F43 		.ascii	"SD_CLK_StopBlock\000"
 1530      4C4B5F53 
 1530      746F7042 
 1530      6C6F636B 
 1530      00
 1531              	.LASF1:
 1532 0111 756E7369 		.ascii	"unsigned char\000"
 1532      676E6564 
 1532      20636861 
 1532      7200
 1533              	.LASF30:
 1534 011f 6D6F6465 		.ascii	"modeBitMask\000"
 1534      4269744D 
 1534      61736B00 
 1535              	.LASF31:
 1536 012b 53445F43 		.ascii	"SD_CLK_ClearModeRegister\000"
 1536      4C4B5F43 
 1536      6C656172 
 1536      4D6F6465 
 1536      52656769 
 1537              	.LASF0:
 1538 0144 7369676E 		.ascii	"signed char\000"
 1538      65642063 
 1538      68617200 
 1539              	.LASF7:
 1540 0150 6C6F6E67 		.ascii	"long long unsigned int\000"
 1540      206C6F6E 
 1540      6720756E 
 1540      7369676E 
 1540      65642069 
 1541              	.LASF8:
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 39


 1542 0167 756E7369 		.ascii	"unsigned int\000"
 1542      676E6564 
 1542      20696E74 
 1542      00
 1543              	.LASF19:
 1544 0174 53445F43 		.ascii	"SD_CLK_Stop\000"
 1544      4C4B5F53 
 1544      746F7000 
 1545              	.LASF3:
 1546 0180 73686F72 		.ascii	"short unsigned int\000"
 1546      7420756E 
 1546      7369676E 
 1546      65642069 
 1546      6E7400
 1547              	.LASF37:
 1548 0193 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SD_CLK.c\000"
 1548      6E657261 
 1548      7465645F 
 1548      536F7572 
 1548      63655C50 
 1549              	.LASF13:
 1550 01b5 63686172 		.ascii	"char\000"
 1550      00
 1551              	.LASF21:
 1552 01ba 53445F43 		.ascii	"SD_CLK_StandbyPower\000"
 1552      4C4B5F53 
 1552      74616E64 
 1552      6279506F 
 1552      77657200 
 1553              	.LASF33:
 1554 01ce 636C6B53 		.ascii	"clkSource\000"
 1554      6F757263 
 1554      6500
 1555              	.LASF28:
 1556 01d8 63757272 		.ascii	"currSrc\000"
 1556      53726300 
 1557              	.LASF26:
 1558 01e0 6F6C6444 		.ascii	"oldDivider\000"
 1558      69766964 
 1558      657200
 1559              	.LASF14:
 1560 01eb 72656738 		.ascii	"reg8\000"
 1560      00
 1561              	.LASF5:
 1562 01f0 6C6F6E67 		.ascii	"long unsigned int\000"
 1562      20756E73 
 1562      69676E65 
 1562      6420696E 
 1562      7400
 1563              	.LASF12:
 1564 0202 646F7562 		.ascii	"double\000"
 1564      6C6500
 1565              	.LASF23:
 1566 0209 73746174 		.ascii	"state\000"
 1566      6500
 1567              	.LASF32:
 1568 020f 53445F43 		.ascii	"SD_CLK_SetSourceRegister\000"
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccs4qA4G.s 			page 40


 1568      4C4B5F53 
 1568      6574536F 
 1568      75726365 
 1568      52656769 
 1569              	.LASF27:
 1570 0228 656E6162 		.ascii	"enabled\000"
 1570      6C656400 
 1571              	.LASF29:
 1572 0230 53445F43 		.ascii	"SD_CLK_SetModeRegister\000"
 1572      4C4B5F53 
 1572      65744D6F 
 1572      64655265 
 1572      67697374 
 1573              	.LASF22:
 1574 0247 53445F43 		.ascii	"SD_CLK_SetDividerRegister\000"
 1574      4C4B5F53 
 1574      65744469 
 1574      76696465 
 1574      72526567 
 1575              	.LASF36:
 1576 0261 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1576      4320342E 
 1576      392E3320 
 1576      32303135 
 1576      30333033 
 1577 0294 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1577      20726576 
 1577      6973696F 
 1577      6E203232 
 1577      31323230 
 1578 02c7 33202D73 		.ascii	"3 -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 1578      74643D67 
 1578      6E753939 
 1578      202D6666 
 1578      756E6374 
 1579              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
