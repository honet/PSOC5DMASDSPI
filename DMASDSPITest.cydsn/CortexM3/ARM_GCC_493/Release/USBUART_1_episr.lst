ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_1_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBUART_1_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBUART_1_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBUART_1_EP_1_ISR, %function
  24              	USBUART_1_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBUART_1_episr.c"
   1:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \file USBUART_1_episr.c
   3:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
   5:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
   8:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  16:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_pvt.h"
  17:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_cydmac.h"
  18:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  20:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  21:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  26:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  28:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  29:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_1_ISR
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 2


  32:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  40:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  44:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  46:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  48:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
  55:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0949     		ldr	r1, .L7
  56:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  57:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP1].addr & USBUART_1_DIR_IN))
  63:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP1].epCr0;
  34              		.loc 1 66 0
  35 0002 0A48     		ldr	r0, .L7+4
  55:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  36              		.loc 1 55 0
  37 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  67:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  68:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP1) != USBUART_1_EP_TYPE_ISOC)
  38              		.loc 1 69 0
  39 0006 0A4B     		ldr	r3, .L7+8
  55:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  40              		.loc 1 55 0
  41 0008 02F0FE02 		and	r2, r2, #254
  42 000c 0A70     		strb	r2, [r1]
  66:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 3


  43              		.loc 1 66 0
  44 000e 827C     		ldrb	r2, [r0, #18]	@ zero_extendqisi2
  45              		.loc 1 69 0
  46 0010 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
  47 0012 02F00302 		and	r2, r2, #3
  48 0016 012A     		cmp	r2, #1
  49 0018 03D0     		beq	.L2
  70:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP1].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  50              		.loc 1 71 0
  51 001a DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
  52 001c 82F08002 		eor	r2, r2, #128
  53 0020 DA73     		strb	r2, [r3, #15]
  54              	.L2:
  72:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  74:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP1].apiEpState = USBUART_1_EVENT_PENDING;
  55              		.loc 1 80 0
  56 0022 0122     		movs	r2, #1
  57 0024 5A73     		strb	r2, [r3, #13]
  58 0026 7047     		bx	lr
  59              	.L8:
  60              		.align	2
  61              	.L7:
  62 0028 0B600040 		.word	1073766411
  63 002c FC5F0040 		.word	1073766396
  64 0030 00000000 		.word	USBUART_1_EP
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	USBUART_1_EP_1_ISR, .-USBUART_1_EP_1_ISR
  68              		.section	.text.USBUART_1_EP_2_ISR,"ax",%progbits
  69              		.align	2
  70              		.global	USBUART_1_EP_2_ISR
  71              		.thumb
  72              		.thumb_func
  73              		.type	USBUART_1_EP_2_ISR, %function
  74              	USBUART_1_EP_2_ISR:
  75              	.LFB1:
  81:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  83:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP1)
  87:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
  93:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 4


  94:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  95:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  97:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 101:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 104:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 109:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 111:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 112:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  76              		.loc 1 121 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
 122:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 126:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 128:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 130:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 137:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP2_INTR);
  81              		.loc 1 137 0
  82 0000 0A49     		ldr	r1, .L14
 138:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 139:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 5


 144:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP2].addr & USBUART_1_DIR_IN))
 145:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP2].epCr0;
  83              		.loc 1 148 0
  84 0002 0B48     		ldr	r0, .L14+4
 137:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  85              		.loc 1 137 0
  86 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 149:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 150:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP2) != USBUART_1_EP_TYPE_ISOC)
  87              		.loc 1 151 0
  88 0006 0B4B     		ldr	r3, .L14+8
 137:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  89              		.loc 1 137 0
  90 0008 02F0FD02 		and	r2, r2, #253
  91 000c 0A70     		strb	r2, [r1]
 148:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  92              		.loc 1 148 0
  93 000e 90F82220 		ldrb	r2, [r0, #34]	@ zero_extendqisi2
  94              		.loc 1 151 0
  95 0012 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
  96 0014 02F00302 		and	r2, r2, #3
  97 0018 012A     		cmp	r2, #1
  98 001a 03D0     		beq	.L10
 152:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP2].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  99              		.loc 1 153 0
 100 001c DA7E     		ldrb	r2, [r3, #27]	@ zero_extendqisi2
 101 001e 82F08002 		eor	r2, r2, #128
 102 0022 DA76     		strb	r2, [r3, #27]
 103              	.L10:
 154:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 156:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP2].apiEpState = USBUART_1_EVENT_PENDING;
 104              		.loc 1 162 0
 105 0024 0122     		movs	r2, #1
 106 0026 5A76     		strb	r2, [r3, #25]
 107 0028 7047     		bx	lr
 108              	.L15:
 109 002a 00BF     		.align	2
 110              	.L14:
 111 002c 0B600040 		.word	1073766411
 112 0030 FC5F0040 		.word	1073766396
 113 0034 00000000 		.word	USBUART_1_EP
 114              		.cfi_endproc
 115              	.LFE1:
 116              		.size	USBUART_1_EP_2_ISR, .-USBUART_1_EP_2_ISR
 117              		.section	.text.USBUART_1_EP_3_ISR,"ax",%progbits
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 6


 118              		.align	2
 119              		.global	USBUART_1_EP_3_ISR
 120              		.thumb
 121              		.thumb_func
 122              		.type	USBUART_1_EP_3_ISR, %function
 123              	USBUART_1_EP_3_ISR:
 124              	.LFB2:
 163:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 165:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP2)
 169:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 175:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 177:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 179:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 183:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 186:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 192:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 193:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 125              		.loc 1 202 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 203:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 207:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 7


 208:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 209:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 211:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 218:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP3_INTR);    
 130              		.loc 1 218 0
 131 0000 0C49     		ldr	r1, .L21
 219:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 220:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP3].addr & USBUART_1_DIR_IN))
 226:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP3].epCr0;
 132              		.loc 1 229 0
 133 0002 0D48     		ldr	r0, .L21+4
 218:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 134              		.loc 1 218 0
 135 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 230:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 231:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP3) != USBUART_1_EP_TYPE_ISOC)
 136              		.loc 1 232 0
 137 0006 0D4B     		ldr	r3, .L21+8
 218:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 138              		.loc 1 218 0
 139 0008 02F0FB02 		and	r2, r2, #251
 140 000c 0A70     		strb	r2, [r1]
 229:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 141              		.loc 1 229 0
 142 000e 90F83220 		ldrb	r2, [r0, #50]	@ zero_extendqisi2
 143              		.loc 1 232 0
 144 0012 93F82420 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 145 0016 02F00302 		and	r2, r2, #3
 146 001a 012A     		cmp	r2, #1
 147 001c 05D0     		beq	.L17
 233:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP3].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 148              		.loc 1 234 0
 149 001e 93F82720 		ldrb	r2, [r3, #39]	@ zero_extendqisi2
 150 0022 82F08002 		eor	r2, r2, #128
 151 0026 83F82720 		strb	r2, [r3, #39]
 152              	.L17:
 235:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 237:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 8


 239:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP3].apiEpState = USBUART_1_EVENT_PENDING;
 153              		.loc 1 243 0
 154 002a 0122     		movs	r2, #1
 155 002c 83F82520 		strb	r2, [r3, #37]
 156 0030 7047     		bx	lr
 157              	.L22:
 158 0032 00BF     		.align	2
 159              	.L21:
 160 0034 0B600040 		.word	1073766411
 161 0038 FC5F0040 		.word	1073766396
 162 003c 00000000 		.word	USBUART_1_EP
 163              		.cfi_endproc
 164              	.LFE2:
 165              		.size	USBUART_1_EP_3_ISR, .-USBUART_1_EP_3_ISR
 166              		.section	.text.USBUART_1_SOF_ISR,"ax",%progbits
 167              		.align	2
 168              		.global	USBUART_1_SOF_ISR
 169              		.thumb
 170              		.thumb_func
 171              		.type	USBUART_1_SOF_ISR, %function
 172              	USBUART_1_SOF_ISR:
 173              	.LFB3:
 244:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 246:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP3)
 250:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 256:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 258:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 260:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 264:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 267:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 273:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 274:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP4_ISR_ACTIVE)
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 9


 275:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 288:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 290:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 292:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 299:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 301:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP4].addr & USBUART_1_DIR_IN))
 307:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 312:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP4) != USBUART_1_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP4].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 318:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP4].apiEpState = USBUART_1_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 327:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP4)
 331:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 10


 332:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 337:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 339:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 341:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 345:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 348:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 354:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 355:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 370:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 372:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 374:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                  USBUART_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 381:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 383:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP5].addr & USBUART_1_DIR_IN))
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 11


 389:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 394:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP5) != USBUART_1_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP5].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 400:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP5].apiEpState = USBUART_1_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 409:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP5)
 413:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 419:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 421:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 423:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 427:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 430:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 436:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 437:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 12


 446:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 452:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 454:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 456:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 463:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 465:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP6].addr & USBUART_1_DIR_IN))
 471:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 476:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP6) != USBUART_1_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP6].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 482:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP6].apiEpState = USBUART_1_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 491:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP6)
 495:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 501:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 13


 503:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 505:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 509:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 512:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 518:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 519:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 534:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 536:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 538:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 545:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 547:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP7].addr & USBUART_1_DIR_IN))
 553:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 558:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP7) != USBUART_1_EP_TYPE_ISOC)
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 14


 560:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP7].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 564:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP7].apiEpState = USBUART_1_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 573:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 574:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP7)
 578:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 584:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 586:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 588:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 592:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 595:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 601:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 602:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 15


 617:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 619:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 621:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 628:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 630:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP8].addr & USBUART_1_DIR_IN))
 636:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 641:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP8) != USBUART_1_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP8].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 647:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP8].apiEpState = USBUART_1_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 656:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP8)
 660:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 666:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 668:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 670:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 16


 674:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 677:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 683:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 684:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_SOF_ISR
 687:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 174              		.loc 1 694 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE3:
 182              		.size	USBUART_1_SOF_ISR, .-USBUART_1_SOF_ISR
 183 0002 00BF     		.section	.text.USBUART_1_BUS_RESET_ISR,"ax",%progbits
 184              		.align	2
 185              		.global	USBUART_1_BUS_RESET_ISR
 186              		.thumb
 187              		.thumb_func
 188              		.type	USBUART_1_BUS_RESET_ISR, %function
 189              	USBUART_1_BUS_RESET_ISR:
 190              	.LFB4:
 695:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 699:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 701:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 703:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 705:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 711:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 712:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /*******************************************************************************
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 17


 714:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Function Name: USBUART_1_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 717:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 720:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 721:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBUART_1_episr.c **** CY_ISR(USBUART_1_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBUART_1_episr.c **** {
 191              		.loc 1 723 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 724:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 728:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 730:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 732:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 734:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ReInitComponent();
 196              		.loc 1 734 0
 197 0000 FFF7FEBF 		b	USBUART_1_ReInitComponent
 198              	.LVL0:
 199              		.cfi_endproc
 200              	.LFE4:
 201              		.size	USBUART_1_BUS_RESET_ISR, .-USBUART_1_BUS_RESET_ISR
 202              		.text
 203              	.Letext0:
 204              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 205              		.file 3 ".\\Generated_Source\\PSoC5\\USBUART_1.h"
 206              		.file 4 ".\\Generated_Source\\PSoC5\\USBUART_1_pvt.h"
 207              		.section	.debug_info,"",%progbits
 208              	.Ldebug_info0:
 209 0000 40020000 		.4byte	0x240
 210 0004 0400     		.2byte	0x4
 211 0006 00000000 		.4byte	.Ldebug_abbrev0
 212 000a 04       		.byte	0x4
 213 000b 01       		.uleb128 0x1
 214 000c 20010000 		.4byte	.LASF36
 215 0010 01       		.byte	0x1
 216 0011 C3010000 		.4byte	.LASF37
 217 0015 55020000 		.4byte	.LASF38
 218 0019 00000000 		.4byte	.Ldebug_ranges0+0
 219 001d 00000000 		.4byte	0
 220 0021 00000000 		.4byte	.Ldebug_line0
 221 0025 02       		.uleb128 0x2
 222 0026 01       		.byte	0x1
 223 0027 06       		.byte	0x6
 224 0028 DB020000 		.4byte	.LASF0
 225 002c 02       		.uleb128 0x2
 226 002d 01       		.byte	0x1
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 18


 227 002e 08       		.byte	0x8
 228 002f 56000000 		.4byte	.LASF1
 229 0033 02       		.uleb128 0x2
 230 0034 02       		.byte	0x2
 231 0035 05       		.byte	0x5
 232 0036 AD020000 		.4byte	.LASF2
 233 003a 02       		.uleb128 0x2
 234 003b 02       		.byte	0x2
 235 003c 07       		.byte	0x7
 236 003d 19000000 		.4byte	.LASF3
 237 0041 02       		.uleb128 0x2
 238 0042 04       		.byte	0x4
 239 0043 05       		.byte	0x5
 240 0044 C7020000 		.4byte	.LASF4
 241 0048 02       		.uleb128 0x2
 242 0049 04       		.byte	0x4
 243 004a 07       		.byte	0x7
 244 004b 69000000 		.4byte	.LASF5
 245 004f 02       		.uleb128 0x2
 246 0050 08       		.byte	0x8
 247 0051 05       		.byte	0x5
 248 0052 29020000 		.4byte	.LASF6
 249 0056 02       		.uleb128 0x2
 250 0057 08       		.byte	0x8
 251 0058 07       		.byte	0x7
 252 0059 09010000 		.4byte	.LASF7
 253 005d 03       		.uleb128 0x3
 254 005e 04       		.byte	0x4
 255 005f 05       		.byte	0x5
 256 0060 696E7400 		.ascii	"int\000"
 257 0064 02       		.uleb128 0x2
 258 0065 04       		.byte	0x4
 259 0066 07       		.byte	0x7
 260 0067 E3000000 		.4byte	.LASF8
 261 006b 04       		.uleb128 0x4
 262 006c B7020000 		.4byte	.LASF9
 263 0070 02       		.byte	0x2
 264 0071 9201     		.2byte	0x192
 265 0073 2C000000 		.4byte	0x2c
 266 0077 04       		.uleb128 0x4
 267 0078 D1000000 		.4byte	.LASF10
 268 007c 02       		.byte	0x2
 269 007d 9301     		.2byte	0x193
 270 007f 3A000000 		.4byte	0x3a
 271 0083 02       		.uleb128 0x2
 272 0084 04       		.byte	0x4
 273 0085 04       		.byte	0x4
 274 0086 06000000 		.4byte	.LASF11
 275 008a 02       		.uleb128 0x2
 276 008b 08       		.byte	0x8
 277 008c 04       		.byte	0x4
 278 008d 99000000 		.4byte	.LASF12
 279 0091 02       		.uleb128 0x2
 280 0092 01       		.byte	0x1
 281 0093 08       		.byte	0x8
 282 0094 50020000 		.4byte	.LASF13
 283 0098 04       		.uleb128 0x4
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 19


 284 0099 64000000 		.4byte	.LASF14
 285 009d 02       		.byte	0x2
 286 009e 3C02     		.2byte	0x23c
 287 00a0 A4000000 		.4byte	0xa4
 288 00a4 05       		.uleb128 0x5
 289 00a5 6B000000 		.4byte	0x6b
 290 00a9 02       		.uleb128 0x2
 291 00aa 04       		.byte	0x4
 292 00ab 07       		.byte	0x7
 293 00ac 01020000 		.4byte	.LASF15
 294 00b0 06       		.uleb128 0x6
 295 00b1 0C       		.byte	0xc
 296 00b2 03       		.byte	0x3
 297 00b3 8D       		.byte	0x8d
 298 00b4 25010000 		.4byte	0x125
 299 00b8 07       		.uleb128 0x7
 300 00b9 A0000000 		.4byte	.LASF16
 301 00bd 03       		.byte	0x3
 302 00be 8F       		.byte	0x8f
 303 00bf 6B000000 		.4byte	0x6b
 304 00c3 00       		.byte	0
 305 00c4 07       		.uleb128 0x7
 306 00c5 D8000000 		.4byte	.LASF17
 307 00c9 03       		.byte	0x3
 308 00ca 90       		.byte	0x90
 309 00cb 6B000000 		.4byte	0x6b
 310 00cf 01       		.byte	0x1
 311 00d0 07       		.uleb128 0x7
 312 00d1 B9010000 		.4byte	.LASF18
 313 00d5 03       		.byte	0x3
 314 00d6 91       		.byte	0x91
 315 00d7 6B000000 		.4byte	0x6b
 316 00db 02       		.byte	0x2
 317 00dc 07       		.uleb128 0x7
 318 00dd 4D000000 		.4byte	.LASF19
 319 00e1 03       		.byte	0x3
 320 00e2 92       		.byte	0x92
 321 00e3 6B000000 		.4byte	0x6b
 322 00e7 03       		.byte	0x3
 323 00e8 07       		.uleb128 0x7
 324 00e9 7B000000 		.4byte	.LASF20
 325 00ed 03       		.byte	0x3
 326 00ee 93       		.byte	0x93
 327 00ef 6B000000 		.4byte	0x6b
 328 00f3 04       		.byte	0x4
 329 00f4 07       		.uleb128 0x7
 330 00f5 22020000 		.4byte	.LASF21
 331 00f9 03       		.byte	0x3
 332 00fa 94       		.byte	0x94
 333 00fb 6B000000 		.4byte	0x6b
 334 00ff 05       		.byte	0x5
 335 0100 07       		.uleb128 0x7
 336 0101 D0020000 		.4byte	.LASF22
 337 0105 03       		.byte	0x3
 338 0106 95       		.byte	0x95
 339 0107 77000000 		.4byte	0x77
 340 010b 06       		.byte	0x6
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 20


 341 010c 07       		.uleb128 0x7
 342 010d A2020000 		.4byte	.LASF23
 343 0111 03       		.byte	0x3
 344 0112 96       		.byte	0x96
 345 0113 77000000 		.4byte	0x77
 346 0117 08       		.byte	0x8
 347 0118 07       		.uleb128 0x7
 348 0119 BD020000 		.4byte	.LASF24
 349 011d 03       		.byte	0x3
 350 011e 97       		.byte	0x97
 351 011f 6B000000 		.4byte	0x6b
 352 0123 0A       		.byte	0xa
 353 0124 00       		.byte	0
 354 0125 08       		.uleb128 0x8
 355 0126 37020000 		.4byte	.LASF25
 356 012a 03       		.byte	0x3
 357 012b 98       		.byte	0x98
 358 012c B0000000 		.4byte	0xb0
 359 0130 06       		.uleb128 0x6
 360 0131 10       		.byte	0x10
 361 0132 03       		.byte	0x3
 362 0133 D4       		.byte	0xd4
 363 0134 69010000 		.4byte	0x169
 364 0138 07       		.uleb128 0x7
 365 0139 3F000000 		.4byte	.LASF26
 366 013d 03       		.byte	0x3
 367 013e D6       		.byte	0xd6
 368 013f 6B000000 		.4byte	0x6b
 369 0143 00       		.byte	0
 370 0144 07       		.uleb128 0x7
 371 0145 46000000 		.4byte	.LASF27
 372 0149 03       		.byte	0x3
 373 014a D7       		.byte	0xd7
 374 014b 6B000000 		.4byte	0x6b
 375 014f 01       		.byte	0x1
 376 0150 07       		.uleb128 0x7
 377 0151 00000000 		.4byte	.LASF28
 378 0155 03       		.byte	0x3
 379 0156 D8       		.byte	0xd8
 380 0157 6B000000 		.4byte	0x6b
 381 015b 02       		.byte	0x2
 382 015c 09       		.uleb128 0x9
 383 015d 67617000 		.ascii	"gap\000"
 384 0161 03       		.byte	0x3
 385 0162 D9       		.byte	0xd9
 386 0163 69010000 		.4byte	0x169
 387 0167 03       		.byte	0x3
 388 0168 00       		.byte	0
 389 0169 0A       		.uleb128 0xa
 390 016a 6B000000 		.4byte	0x6b
 391 016e 79010000 		.4byte	0x179
 392 0172 0B       		.uleb128 0xb
 393 0173 A9000000 		.4byte	0xa9
 394 0177 0C       		.byte	0xc
 395 0178 00       		.byte	0
 396 0179 08       		.uleb128 0x8
 397 017a 0A020000 		.4byte	.LASF29
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 21


 398 017e 03       		.byte	0x3
 399 017f DA       		.byte	0xda
 400 0180 30010000 		.4byte	0x130
 401 0184 0C       		.uleb128 0xc
 402 0185 90       		.byte	0x90
 403 0186 03       		.byte	0x3
 404 0187 0E01     		.2byte	0x10e
 405 0189 9B010000 		.4byte	0x19b
 406 018d 0D       		.uleb128 0xd
 407 018e 80000000 		.4byte	.LASF30
 408 0192 03       		.byte	0x3
 409 0193 1001     		.2byte	0x110
 410 0195 9B010000 		.4byte	0x19b
 411 0199 00       		.byte	0
 412 019a 00       		.byte	0
 413 019b 0A       		.uleb128 0xa
 414 019c 79010000 		.4byte	0x179
 415 01a0 AB010000 		.4byte	0x1ab
 416 01a4 0B       		.uleb128 0xb
 417 01a5 A9000000 		.4byte	0xa9
 418 01a9 08       		.byte	0x8
 419 01aa 00       		.byte	0
 420 01ab 04       		.uleb128 0x4
 421 01ac F0000000 		.4byte	.LASF31
 422 01b0 03       		.byte	0x3
 423 01b1 1101     		.2byte	0x111
 424 01b3 84010000 		.4byte	0x184
 425 01b7 0E       		.uleb128 0xe
 426 01b8 2C000000 		.4byte	.LASF32
 427 01bc 01       		.byte	0x1
 428 01bd 25       		.byte	0x25
 429 01be 00000000 		.4byte	.LFB0
 430 01c2 34000000 		.4byte	.LFE0-.LFB0
 431 01c6 01       		.uleb128 0x1
 432 01c7 9C       		.byte	0x9c
 433 01c8 0E       		.uleb128 0xe
 434 01c9 86000000 		.4byte	.LASF33
 435 01cd 01       		.byte	0x1
 436 01ce 78       		.byte	0x78
 437 01cf 00000000 		.4byte	.LFB1
 438 01d3 38000000 		.4byte	.LFE1-.LFB1
 439 01d7 01       		.uleb128 0x1
 440 01d8 9C       		.byte	0x9c
 441 01d9 0E       		.uleb128 0xe
 442 01da EE010000 		.4byte	.LASF34
 443 01de 01       		.byte	0x1
 444 01df C9       		.byte	0xc9
 445 01e0 00000000 		.4byte	.LFB2
 446 01e4 40000000 		.4byte	.LFE2-.LFB2
 447 01e8 01       		.uleb128 0x1
 448 01e9 9C       		.byte	0x9c
 449 01ea 0F       		.uleb128 0xf
 450 01eb BF000000 		.4byte	.LASF35
 451 01ef 01       		.byte	0x1
 452 01f0 B502     		.2byte	0x2b5
 453 01f2 00000000 		.4byte	.LFB3
 454 01f6 02000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 22


 455 01fa 01       		.uleb128 0x1
 456 01fb 9C       		.byte	0x9c
 457 01fc 10       		.uleb128 0x10
 458 01fd A7000000 		.4byte	.LASF39
 459 0201 01       		.byte	0x1
 460 0202 D202     		.2byte	0x2d2
 461 0204 00000000 		.4byte	.LFB4
 462 0208 04000000 		.4byte	.LFE4-.LFB4
 463 020c 01       		.uleb128 0x1
 464 020d 9C       		.byte	0x9c
 465 020e 1C020000 		.4byte	0x21c
 466 0212 11       		.uleb128 0x11
 467 0213 04000000 		.4byte	.LVL0
 468 0217 3C020000 		.4byte	0x23c
 469 021b 00       		.byte	0
 470 021c 0A       		.uleb128 0xa
 471 021d 25010000 		.4byte	0x125
 472 0221 2C020000 		.4byte	0x22c
 473 0225 0B       		.uleb128 0xb
 474 0226 A9000000 		.4byte	0xa9
 475 022a 08       		.byte	0x8
 476 022b 00       		.byte	0
 477 022c 12       		.uleb128 0x12
 478 022d 0C000000 		.4byte	.LASF40
 479 0231 04       		.byte	0x4
 480 0232 79       		.byte	0x79
 481 0233 37020000 		.4byte	0x237
 482 0237 05       		.uleb128 0x5
 483 0238 1C020000 		.4byte	0x21c
 484 023c 13       		.uleb128 0x13
 485 023d E7020000 		.4byte	.LASF41
 486 0241 04       		.byte	0x4
 487 0242 A4       		.byte	0xa4
 488 0243 00       		.byte	0
 489              		.section	.debug_abbrev,"",%progbits
 490              	.Ldebug_abbrev0:
 491 0000 01       		.uleb128 0x1
 492 0001 11       		.uleb128 0x11
 493 0002 01       		.byte	0x1
 494 0003 25       		.uleb128 0x25
 495 0004 0E       		.uleb128 0xe
 496 0005 13       		.uleb128 0x13
 497 0006 0B       		.uleb128 0xb
 498 0007 03       		.uleb128 0x3
 499 0008 0E       		.uleb128 0xe
 500 0009 1B       		.uleb128 0x1b
 501 000a 0E       		.uleb128 0xe
 502 000b 55       		.uleb128 0x55
 503 000c 17       		.uleb128 0x17
 504 000d 11       		.uleb128 0x11
 505 000e 01       		.uleb128 0x1
 506 000f 10       		.uleb128 0x10
 507 0010 17       		.uleb128 0x17
 508 0011 00       		.byte	0
 509 0012 00       		.byte	0
 510 0013 02       		.uleb128 0x2
 511 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 23


 512 0015 00       		.byte	0
 513 0016 0B       		.uleb128 0xb
 514 0017 0B       		.uleb128 0xb
 515 0018 3E       		.uleb128 0x3e
 516 0019 0B       		.uleb128 0xb
 517 001a 03       		.uleb128 0x3
 518 001b 0E       		.uleb128 0xe
 519 001c 00       		.byte	0
 520 001d 00       		.byte	0
 521 001e 03       		.uleb128 0x3
 522 001f 24       		.uleb128 0x24
 523 0020 00       		.byte	0
 524 0021 0B       		.uleb128 0xb
 525 0022 0B       		.uleb128 0xb
 526 0023 3E       		.uleb128 0x3e
 527 0024 0B       		.uleb128 0xb
 528 0025 03       		.uleb128 0x3
 529 0026 08       		.uleb128 0x8
 530 0027 00       		.byte	0
 531 0028 00       		.byte	0
 532 0029 04       		.uleb128 0x4
 533 002a 16       		.uleb128 0x16
 534 002b 00       		.byte	0
 535 002c 03       		.uleb128 0x3
 536 002d 0E       		.uleb128 0xe
 537 002e 3A       		.uleb128 0x3a
 538 002f 0B       		.uleb128 0xb
 539 0030 3B       		.uleb128 0x3b
 540 0031 05       		.uleb128 0x5
 541 0032 49       		.uleb128 0x49
 542 0033 13       		.uleb128 0x13
 543 0034 00       		.byte	0
 544 0035 00       		.byte	0
 545 0036 05       		.uleb128 0x5
 546 0037 35       		.uleb128 0x35
 547 0038 00       		.byte	0
 548 0039 49       		.uleb128 0x49
 549 003a 13       		.uleb128 0x13
 550 003b 00       		.byte	0
 551 003c 00       		.byte	0
 552 003d 06       		.uleb128 0x6
 553 003e 13       		.uleb128 0x13
 554 003f 01       		.byte	0x1
 555 0040 0B       		.uleb128 0xb
 556 0041 0B       		.uleb128 0xb
 557 0042 3A       		.uleb128 0x3a
 558 0043 0B       		.uleb128 0xb
 559 0044 3B       		.uleb128 0x3b
 560 0045 0B       		.uleb128 0xb
 561 0046 01       		.uleb128 0x1
 562 0047 13       		.uleb128 0x13
 563 0048 00       		.byte	0
 564 0049 00       		.byte	0
 565 004a 07       		.uleb128 0x7
 566 004b 0D       		.uleb128 0xd
 567 004c 00       		.byte	0
 568 004d 03       		.uleb128 0x3
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 24


 569 004e 0E       		.uleb128 0xe
 570 004f 3A       		.uleb128 0x3a
 571 0050 0B       		.uleb128 0xb
 572 0051 3B       		.uleb128 0x3b
 573 0052 0B       		.uleb128 0xb
 574 0053 49       		.uleb128 0x49
 575 0054 13       		.uleb128 0x13
 576 0055 38       		.uleb128 0x38
 577 0056 0B       		.uleb128 0xb
 578 0057 00       		.byte	0
 579 0058 00       		.byte	0
 580 0059 08       		.uleb128 0x8
 581 005a 16       		.uleb128 0x16
 582 005b 00       		.byte	0
 583 005c 03       		.uleb128 0x3
 584 005d 0E       		.uleb128 0xe
 585 005e 3A       		.uleb128 0x3a
 586 005f 0B       		.uleb128 0xb
 587 0060 3B       		.uleb128 0x3b
 588 0061 0B       		.uleb128 0xb
 589 0062 49       		.uleb128 0x49
 590 0063 13       		.uleb128 0x13
 591 0064 00       		.byte	0
 592 0065 00       		.byte	0
 593 0066 09       		.uleb128 0x9
 594 0067 0D       		.uleb128 0xd
 595 0068 00       		.byte	0
 596 0069 03       		.uleb128 0x3
 597 006a 08       		.uleb128 0x8
 598 006b 3A       		.uleb128 0x3a
 599 006c 0B       		.uleb128 0xb
 600 006d 3B       		.uleb128 0x3b
 601 006e 0B       		.uleb128 0xb
 602 006f 49       		.uleb128 0x49
 603 0070 13       		.uleb128 0x13
 604 0071 38       		.uleb128 0x38
 605 0072 0B       		.uleb128 0xb
 606 0073 00       		.byte	0
 607 0074 00       		.byte	0
 608 0075 0A       		.uleb128 0xa
 609 0076 01       		.uleb128 0x1
 610 0077 01       		.byte	0x1
 611 0078 49       		.uleb128 0x49
 612 0079 13       		.uleb128 0x13
 613 007a 01       		.uleb128 0x1
 614 007b 13       		.uleb128 0x13
 615 007c 00       		.byte	0
 616 007d 00       		.byte	0
 617 007e 0B       		.uleb128 0xb
 618 007f 21       		.uleb128 0x21
 619 0080 00       		.byte	0
 620 0081 49       		.uleb128 0x49
 621 0082 13       		.uleb128 0x13
 622 0083 2F       		.uleb128 0x2f
 623 0084 0B       		.uleb128 0xb
 624 0085 00       		.byte	0
 625 0086 00       		.byte	0
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 25


 626 0087 0C       		.uleb128 0xc
 627 0088 13       		.uleb128 0x13
 628 0089 01       		.byte	0x1
 629 008a 0B       		.uleb128 0xb
 630 008b 0B       		.uleb128 0xb
 631 008c 3A       		.uleb128 0x3a
 632 008d 0B       		.uleb128 0xb
 633 008e 3B       		.uleb128 0x3b
 634 008f 05       		.uleb128 0x5
 635 0090 01       		.uleb128 0x1
 636 0091 13       		.uleb128 0x13
 637 0092 00       		.byte	0
 638 0093 00       		.byte	0
 639 0094 0D       		.uleb128 0xd
 640 0095 0D       		.uleb128 0xd
 641 0096 00       		.byte	0
 642 0097 03       		.uleb128 0x3
 643 0098 0E       		.uleb128 0xe
 644 0099 3A       		.uleb128 0x3a
 645 009a 0B       		.uleb128 0xb
 646 009b 3B       		.uleb128 0x3b
 647 009c 05       		.uleb128 0x5
 648 009d 49       		.uleb128 0x49
 649 009e 13       		.uleb128 0x13
 650 009f 38       		.uleb128 0x38
 651 00a0 0B       		.uleb128 0xb
 652 00a1 00       		.byte	0
 653 00a2 00       		.byte	0
 654 00a3 0E       		.uleb128 0xe
 655 00a4 2E       		.uleb128 0x2e
 656 00a5 00       		.byte	0
 657 00a6 3F       		.uleb128 0x3f
 658 00a7 19       		.uleb128 0x19
 659 00a8 03       		.uleb128 0x3
 660 00a9 0E       		.uleb128 0xe
 661 00aa 3A       		.uleb128 0x3a
 662 00ab 0B       		.uleb128 0xb
 663 00ac 3B       		.uleb128 0x3b
 664 00ad 0B       		.uleb128 0xb
 665 00ae 27       		.uleb128 0x27
 666 00af 19       		.uleb128 0x19
 667 00b0 11       		.uleb128 0x11
 668 00b1 01       		.uleb128 0x1
 669 00b2 12       		.uleb128 0x12
 670 00b3 06       		.uleb128 0x6
 671 00b4 40       		.uleb128 0x40
 672 00b5 18       		.uleb128 0x18
 673 00b6 9742     		.uleb128 0x2117
 674 00b8 19       		.uleb128 0x19
 675 00b9 00       		.byte	0
 676 00ba 00       		.byte	0
 677 00bb 0F       		.uleb128 0xf
 678 00bc 2E       		.uleb128 0x2e
 679 00bd 00       		.byte	0
 680 00be 3F       		.uleb128 0x3f
 681 00bf 19       		.uleb128 0x19
 682 00c0 03       		.uleb128 0x3
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 26


 683 00c1 0E       		.uleb128 0xe
 684 00c2 3A       		.uleb128 0x3a
 685 00c3 0B       		.uleb128 0xb
 686 00c4 3B       		.uleb128 0x3b
 687 00c5 05       		.uleb128 0x5
 688 00c6 27       		.uleb128 0x27
 689 00c7 19       		.uleb128 0x19
 690 00c8 11       		.uleb128 0x11
 691 00c9 01       		.uleb128 0x1
 692 00ca 12       		.uleb128 0x12
 693 00cb 06       		.uleb128 0x6
 694 00cc 40       		.uleb128 0x40
 695 00cd 18       		.uleb128 0x18
 696 00ce 9742     		.uleb128 0x2117
 697 00d0 19       		.uleb128 0x19
 698 00d1 00       		.byte	0
 699 00d2 00       		.byte	0
 700 00d3 10       		.uleb128 0x10
 701 00d4 2E       		.uleb128 0x2e
 702 00d5 01       		.byte	0x1
 703 00d6 3F       		.uleb128 0x3f
 704 00d7 19       		.uleb128 0x19
 705 00d8 03       		.uleb128 0x3
 706 00d9 0E       		.uleb128 0xe
 707 00da 3A       		.uleb128 0x3a
 708 00db 0B       		.uleb128 0xb
 709 00dc 3B       		.uleb128 0x3b
 710 00dd 05       		.uleb128 0x5
 711 00de 27       		.uleb128 0x27
 712 00df 19       		.uleb128 0x19
 713 00e0 11       		.uleb128 0x11
 714 00e1 01       		.uleb128 0x1
 715 00e2 12       		.uleb128 0x12
 716 00e3 06       		.uleb128 0x6
 717 00e4 40       		.uleb128 0x40
 718 00e5 18       		.uleb128 0x18
 719 00e6 9742     		.uleb128 0x2117
 720 00e8 19       		.uleb128 0x19
 721 00e9 01       		.uleb128 0x1
 722 00ea 13       		.uleb128 0x13
 723 00eb 00       		.byte	0
 724 00ec 00       		.byte	0
 725 00ed 11       		.uleb128 0x11
 726 00ee 898201   		.uleb128 0x4109
 727 00f1 00       		.byte	0
 728 00f2 11       		.uleb128 0x11
 729 00f3 01       		.uleb128 0x1
 730 00f4 9542     		.uleb128 0x2115
 731 00f6 19       		.uleb128 0x19
 732 00f7 31       		.uleb128 0x31
 733 00f8 13       		.uleb128 0x13
 734 00f9 00       		.byte	0
 735 00fa 00       		.byte	0
 736 00fb 12       		.uleb128 0x12
 737 00fc 34       		.uleb128 0x34
 738 00fd 00       		.byte	0
 739 00fe 03       		.uleb128 0x3
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 27


 740 00ff 0E       		.uleb128 0xe
 741 0100 3A       		.uleb128 0x3a
 742 0101 0B       		.uleb128 0xb
 743 0102 3B       		.uleb128 0x3b
 744 0103 0B       		.uleb128 0xb
 745 0104 49       		.uleb128 0x49
 746 0105 13       		.uleb128 0x13
 747 0106 3F       		.uleb128 0x3f
 748 0107 19       		.uleb128 0x19
 749 0108 3C       		.uleb128 0x3c
 750 0109 19       		.uleb128 0x19
 751 010a 00       		.byte	0
 752 010b 00       		.byte	0
 753 010c 13       		.uleb128 0x13
 754 010d 2E       		.uleb128 0x2e
 755 010e 00       		.byte	0
 756 010f 3F       		.uleb128 0x3f
 757 0110 19       		.uleb128 0x19
 758 0111 03       		.uleb128 0x3
 759 0112 0E       		.uleb128 0xe
 760 0113 3A       		.uleb128 0x3a
 761 0114 0B       		.uleb128 0xb
 762 0115 3B       		.uleb128 0x3b
 763 0116 0B       		.uleb128 0xb
 764 0117 27       		.uleb128 0x27
 765 0118 19       		.uleb128 0x19
 766 0119 3C       		.uleb128 0x3c
 767 011a 19       		.uleb128 0x19
 768 011b 00       		.byte	0
 769 011c 00       		.byte	0
 770 011d 00       		.byte	0
 771              		.section	.debug_aranges,"",%progbits
 772 0000 3C000000 		.4byte	0x3c
 773 0004 0200     		.2byte	0x2
 774 0006 00000000 		.4byte	.Ldebug_info0
 775 000a 04       		.byte	0x4
 776 000b 00       		.byte	0
 777 000c 0000     		.2byte	0
 778 000e 0000     		.2byte	0
 779 0010 00000000 		.4byte	.LFB0
 780 0014 34000000 		.4byte	.LFE0-.LFB0
 781 0018 00000000 		.4byte	.LFB1
 782 001c 38000000 		.4byte	.LFE1-.LFB1
 783 0020 00000000 		.4byte	.LFB2
 784 0024 40000000 		.4byte	.LFE2-.LFB2
 785 0028 00000000 		.4byte	.LFB3
 786 002c 02000000 		.4byte	.LFE3-.LFB3
 787 0030 00000000 		.4byte	.LFB4
 788 0034 04000000 		.4byte	.LFE4-.LFB4
 789 0038 00000000 		.4byte	0
 790 003c 00000000 		.4byte	0
 791              		.section	.debug_ranges,"",%progbits
 792              	.Ldebug_ranges0:
 793 0000 00000000 		.4byte	.LFB0
 794 0004 34000000 		.4byte	.LFE0
 795 0008 00000000 		.4byte	.LFB1
 796 000c 38000000 		.4byte	.LFE1
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 28


 797 0010 00000000 		.4byte	.LFB2
 798 0014 40000000 		.4byte	.LFE2
 799 0018 00000000 		.4byte	.LFB3
 800 001c 02000000 		.4byte	.LFE3
 801 0020 00000000 		.4byte	.LFB4
 802 0024 04000000 		.4byte	.LFE4
 803 0028 00000000 		.4byte	0
 804 002c 00000000 		.4byte	0
 805              		.section	.debug_line,"",%progbits
 806              	.Ldebug_line0:
 807 0000 0D010000 		.section	.debug_str,"MS",%progbits,1
 807      02007000 
 807      00000201 
 807      FB0E0D00 
 807      01010101 
 808              	.LASF28:
 809 0000 65704372 		.ascii	"epCr0\000"
 809      3000
 810              	.LASF11:
 811 0006 666C6F61 		.ascii	"float\000"
 811      7400
 812              	.LASF40:
 813 000c 55534255 		.ascii	"USBUART_1_EP\000"
 813      4152545F 
 813      315F4550 
 813      00
 814              	.LASF3:
 815 0019 73686F72 		.ascii	"short unsigned int\000"
 815      7420756E 
 815      7369676E 
 815      65642069 
 815      6E7400
 816              	.LASF32:
 817 002c 55534255 		.ascii	"USBUART_1_EP_1_ISR\000"
 817      4152545F 
 817      315F4550 
 817      5F315F49 
 817      535200
 818              	.LASF26:
 819 003f 6570436E 		.ascii	"epCnt0\000"
 819      743000
 820              	.LASF27:
 821 0046 6570436E 		.ascii	"epCnt1\000"
 821      743100
 822              	.LASF19:
 823 004d 6570546F 		.ascii	"epToggle\000"
 823      67676C65 
 823      00
 824              	.LASF1:
 825 0056 756E7369 		.ascii	"unsigned char\000"
 825      676E6564 
 825      20636861 
 825      7200
 826              	.LASF14:
 827 0064 72656738 		.ascii	"reg8\000"
 827      00
 828              	.LASF5:
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 29


 829 0069 6C6F6E67 		.ascii	"long unsigned int\000"
 829      20756E73 
 829      69676E65 
 829      6420696E 
 829      7400
 830              	.LASF20:
 831 007b 61646472 		.ascii	"addr\000"
 831      00
 832              	.LASF30:
 833 0080 73696545 		.ascii	"sieEp\000"
 833      7000
 834              	.LASF33:
 835 0086 55534255 		.ascii	"USBUART_1_EP_2_ISR\000"
 835      4152545F 
 835      315F4550 
 835      5F325F49 
 835      535200
 836              	.LASF12:
 837 0099 646F7562 		.ascii	"double\000"
 837      6C6500
 838              	.LASF16:
 839 00a0 61747472 		.ascii	"attrib\000"
 839      696200
 840              	.LASF39:
 841 00a7 55534255 		.ascii	"USBUART_1_BUS_RESET_ISR\000"
 841      4152545F 
 841      315F4255 
 841      535F5245 
 841      5345545F 
 842              	.LASF35:
 843 00bf 55534255 		.ascii	"USBUART_1_SOF_ISR\000"
 843      4152545F 
 843      315F534F 
 843      465F4953 
 843      5200
 844              	.LASF10:
 845 00d1 75696E74 		.ascii	"uint16\000"
 845      313600
 846              	.LASF17:
 847 00d8 61706945 		.ascii	"apiEpState\000"
 847      70537461 
 847      746500
 848              	.LASF8:
 849 00e3 756E7369 		.ascii	"unsigned int\000"
 849      676E6564 
 849      20696E74 
 849      00
 850              	.LASF31:
 851 00f0 55534255 		.ascii	"USBUART_1_sie_eps_struct\000"
 851      4152545F 
 851      315F7369 
 851      655F6570 
 851      735F7374 
 852              	.LASF7:
 853 0109 6C6F6E67 		.ascii	"long long unsigned int\000"
 853      206C6F6E 
 853      6720756E 
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 30


 853      7369676E 
 853      65642069 
 854              	.LASF36:
 855 0120 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 855      4320342E 
 855      392E3320 
 855      32303135 
 855      30333033 
 856 0153 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 856      20726576 
 856      6973696F 
 856      6E203232 
 856      31323230 
 857 0186 33202D73 		.ascii	"3 -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 857      74643D67 
 857      6E753939 
 857      202D6666 
 857      756E6374 
 858              	.LASF18:
 859 01b9 68774570 		.ascii	"hwEpState\000"
 859      53746174 
 859      6500
 860              	.LASF37:
 861 01c3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBUART_1_episr.c\000"
 861      6E657261 
 861      7465645F 
 861      536F7572 
 861      63655C50 
 862              	.LASF34:
 863 01ee 55534255 		.ascii	"USBUART_1_EP_3_ISR\000"
 863      4152545F 
 863      315F4550 
 863      5F335F49 
 863      535200
 864              	.LASF15:
 865 0201 73697A65 		.ascii	"sizetype\000"
 865      74797065 
 865      00
 866              	.LASF29:
 867 020a 55534255 		.ascii	"USBUART_1_sie_ep_struct\000"
 867      4152545F 
 867      315F7369 
 867      655F6570 
 867      5F737472 
 868              	.LASF21:
 869 0222 65704D6F 		.ascii	"epMode\000"
 869      646500
 870              	.LASF6:
 871 0229 6C6F6E67 		.ascii	"long long int\000"
 871      206C6F6E 
 871      6720696E 
 871      7400
 872              	.LASF25:
 873 0237 545F5553 		.ascii	"T_USBUART_1_EP_CTL_BLOCK\000"
 873      42554152 
 873      545F315F 
 873      45505F43 
ARM GAS  C:\Users\honet\AppData\Local\Temp\cc0WjBwQ.s 			page 31


 873      544C5F42 
 874              	.LASF13:
 875 0250 63686172 		.ascii	"char\000"
 875      00
 876              	.LASF38:
 877 0255 443A5C64 		.ascii	"D:\\develop\\projects\\SoundChipLogger\\firmware\\D"
 877      6576656C 
 877      6F705C70 
 877      726F6A65 
 877      6374735C 
 878 0283 4D415344 		.ascii	"MASDSPITest\\DMASDSPITest.cydsn\000"
 878      53504954 
 878      6573745C 
 878      444D4153 
 878      44535049 
 879              	.LASF23:
 880 02a2 62756666 		.ascii	"bufferSize\000"
 880      65725369 
 880      7A6500
 881              	.LASF2:
 882 02ad 73686F72 		.ascii	"short int\000"
 882      7420696E 
 882      7400
 883              	.LASF9:
 884 02b7 75696E74 		.ascii	"uint8\000"
 884      3800
 885              	.LASF24:
 886 02bd 696E7465 		.ascii	"interface\000"
 886      72666163 
 886      6500
 887              	.LASF4:
 888 02c7 6C6F6E67 		.ascii	"long int\000"
 888      20696E74 
 888      00
 889              	.LASF22:
 890 02d0 62756666 		.ascii	"buffOffset\000"
 890      4F666673 
 890      657400
 891              	.LASF0:
 892 02db 7369676E 		.ascii	"signed char\000"
 892      65642063 
 892      68617200 
 893              	.LASF41:
 894 02e7 55534255 		.ascii	"USBUART_1_ReInitComponent\000"
 894      4152545F 
 894      315F5265 
 894      496E6974 
 894      436F6D70 
 895              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
