ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_1_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBUART_1_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBUART_1_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBUART_1_EP_1_ISR, %function
  24              	USBUART_1_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBUART_1_episr.c"
   1:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \file USBUART_1_episr.c
   3:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
   5:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
   8:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  16:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_pvt.h"
  17:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_cydmac.h"
  18:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  20:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  21:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  26:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  28:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  29:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_1_ISR
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 2


  32:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  39:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  40:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  44:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  46:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  48:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
  55:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP1_INTR);
  37              		.loc 1 55 0
  38 0004 104A     		ldr	r2, .L3
  39 0006 104B     		ldr	r3, .L3
  40 0008 1B78     		ldrb	r3, [r3]
  41 000a DBB2     		uxtb	r3, r3
  42 000c 23F00103 		bic	r3, r3, #1
  43 0010 DBB2     		uxtb	r3, r3
  44 0012 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  57:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP1].addr & USBUART_1_DIR_IN))
  63:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP1].epCr0;
  45              		.loc 1 66 0
  46 0014 0D4B     		ldr	r3, .L3+4
  47 0016 9B7C     		ldrb	r3, [r3, #18]
  67:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 3


  68:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP1) != USBUART_1_EP_TYPE_ISOC)
  48              		.loc 1 69 0
  49 0018 0D4B     		ldr	r3, .L3+8
  50 001a 1B7B     		ldrb	r3, [r3, #12]
  51 001c DBB2     		uxtb	r3, r3
  52 001e 03F00303 		and	r3, r3, #3
  53 0022 012B     		cmp	r3, #1
  54 0024 08D0     		beq	.L2
  70:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP1].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  55              		.loc 1 71 0
  56 0026 0A4B     		ldr	r3, .L3+8
  57 0028 DB7B     		ldrb	r3, [r3, #15]
  58 002a DBB2     		uxtb	r3, r3
  59 002c 83F07F03 		eor	r3, r3, #127
  60 0030 DB43     		mvns	r3, r3
  61 0032 DAB2     		uxtb	r2, r3
  62 0034 064B     		ldr	r3, .L3+8
  63 0036 DA73     		strb	r2, [r3, #15]
  64              	.L2:
  72:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  74:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP1].apiEpState = USBUART_1_EVENT_PENDING;
  65              		.loc 1 80 0
  66 0038 054B     		ldr	r3, .L3+8
  67 003a 0122     		movs	r2, #1
  68 003c 5A73     		strb	r2, [r3, #13]
  81:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  83:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP1)
  87:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
  93:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  95:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  97:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 101:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 4


 104:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
  69              		.loc 1 107 0
  70 003e BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0040 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0044 7047     		bx	lr
  77              	.L4:
  78 0046 00BF     		.align	2
  79              	.L3:
  80 0048 0B600040 		.word	1073766411
  81 004c FC5F0040 		.word	1073766396
  82 0050 00000000 		.word	USBUART_1_EP
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USBUART_1_EP_1_ISR, .-USBUART_1_EP_1_ISR
  86              		.section	.text.USBUART_1_EP_2_ISR,"ax",%progbits
  87              		.align	2
  88              		.global	USBUART_1_EP_2_ISR
  89              		.thumb
  90              		.thumb_func
  91              		.type	USBUART_1_EP_2_ISR, %function
  92              	USBUART_1_EP_2_ISR:
  93              	.LFB1:
 108:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 109:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 111:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 112:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  94              		.loc 1 121 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 5


 126:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 128:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 130:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 137:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP2_INTR);
 104              		.loc 1 137 0
 105 0004 104A     		ldr	r2, .L7
 106 0006 104B     		ldr	r3, .L7
 107 0008 1B78     		ldrb	r3, [r3]
 108 000a DBB2     		uxtb	r3, r3
 109 000c 23F00203 		bic	r3, r3, #2
 110 0010 DBB2     		uxtb	r3, r3
 111 0012 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 139:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP2].addr & USBUART_1_DIR_IN))
 145:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP2].epCr0;
 112              		.loc 1 148 0
 113 0014 0D4B     		ldr	r3, .L7+4
 114 0016 93F82230 		ldrb	r3, [r3, #34]
 149:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 150:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP2) != USBUART_1_EP_TYPE_ISOC)
 115              		.loc 1 151 0
 116 001a 0D4B     		ldr	r3, .L7+8
 117 001c 1B7E     		ldrb	r3, [r3, #24]
 118 001e DBB2     		uxtb	r3, r3
 119 0020 03F00303 		and	r3, r3, #3
 120 0024 012B     		cmp	r3, #1
 121 0026 08D0     		beq	.L6
 152:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP2].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 122              		.loc 1 153 0
 123 0028 094B     		ldr	r3, .L7+8
 124 002a DB7E     		ldrb	r3, [r3, #27]
 125 002c DBB2     		uxtb	r3, r3
 126 002e 83F07F03 		eor	r3, r3, #127
 127 0032 DB43     		mvns	r3, r3
 128 0034 DAB2     		uxtb	r2, r3
 129 0036 064B     		ldr	r3, .L7+8
 130 0038 DA76     		strb	r2, [r3, #27]
 131              	.L6:
 154:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 6


 155:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 156:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP2].apiEpState = USBUART_1_EVENT_PENDING;
 132              		.loc 1 162 0
 133 003a 054B     		ldr	r3, .L7+8
 134 003c 0122     		movs	r2, #1
 135 003e 5A76     		strb	r2, [r3, #25]
 163:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 165:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP2)
 169:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 175:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 177:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 179:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 183:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 186:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 136              		.loc 1 189 0
 137 0040 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 0042 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 0046 7047     		bx	lr
 144              	.L8:
 145              		.align	2
 146              	.L7:
 147 0048 0B600040 		.word	1073766411
 148 004c FC5F0040 		.word	1073766396
 149 0050 00000000 		.word	USBUART_1_EP
 150              		.cfi_endproc
 151              	.LFE1:
 152              		.size	USBUART_1_EP_2_ISR, .-USBUART_1_EP_2_ISR
 153              		.section	.text.USBUART_1_EP_3_ISR,"ax",%progbits
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 7


 154              		.align	2
 155              		.global	USBUART_1_EP_3_ISR
 156              		.thumb
 157              		.thumb_func
 158              		.type	USBUART_1_EP_3_ISR, %function
 159              	USBUART_1_EP_3_ISR:
 160              	.LFB2:
 190:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 192:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 193:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 161              		.loc 1 202 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 203:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 207:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 209:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 211:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 218:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP3_INTR);    
 171              		.loc 1 218 0
 172 0004 124A     		ldr	r2, .L11
 173 0006 124B     		ldr	r3, .L11
 174 0008 1B78     		ldrb	r3, [r3]
 175 000a DBB2     		uxtb	r3, r3
 176 000c 23F00403 		bic	r3, r3, #4
 177 0010 DBB2     		uxtb	r3, r3
 178 0012 1370     		strb	r3, [r2]
 219:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 220:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 8


 222:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP3].addr & USBUART_1_DIR_IN))
 226:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP3].epCr0;
 179              		.loc 1 229 0
 180 0014 0F4B     		ldr	r3, .L11+4
 181 0016 93F83230 		ldrb	r3, [r3, #50]
 230:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 231:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP3) != USBUART_1_EP_TYPE_ISOC)
 182              		.loc 1 232 0
 183 001a 0F4B     		ldr	r3, .L11+8
 184 001c 93F82430 		ldrb	r3, [r3, #36]
 185 0020 DBB2     		uxtb	r3, r3
 186 0022 03F00303 		and	r3, r3, #3
 187 0026 012B     		cmp	r3, #1
 188 0028 0AD0     		beq	.L10
 233:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP3].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 189              		.loc 1 234 0
 190 002a 0B4B     		ldr	r3, .L11+8
 191 002c 93F82730 		ldrb	r3, [r3, #39]
 192 0030 DBB2     		uxtb	r3, r3
 193 0032 83F07F03 		eor	r3, r3, #127
 194 0036 DB43     		mvns	r3, r3
 195 0038 DAB2     		uxtb	r2, r3
 196 003a 074B     		ldr	r3, .L11+8
 197 003c 83F82720 		strb	r2, [r3, #39]
 198              	.L10:
 235:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 237:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP3].apiEpState = USBUART_1_EVENT_PENDING;
 199              		.loc 1 243 0
 200 0040 054B     		ldr	r3, .L11+8
 201 0042 0122     		movs	r2, #1
 202 0044 83F82520 		strb	r2, [r3, #37]
 244:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 246:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP3)
 250:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 9


 255:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 256:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 258:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 260:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 264:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 267:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 203              		.loc 1 270 0
 204 0048 BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 004a 5DF8047B 		ldr	r7, [sp], #4
 208              		.cfi_restore 7
 209              		.cfi_def_cfa_offset 0
 210 004e 7047     		bx	lr
 211              	.L12:
 212              		.align	2
 213              	.L11:
 214 0050 0B600040 		.word	1073766411
 215 0054 FC5F0040 		.word	1073766396
 216 0058 00000000 		.word	USBUART_1_EP
 217              		.cfi_endproc
 218              	.LFE2:
 219              		.size	USBUART_1_EP_3_ISR, .-USBUART_1_EP_3_ISR
 220              		.section	.text.USBUART_1_SOF_ISR,"ax",%progbits
 221              		.align	2
 222              		.global	USBUART_1_SOF_ISR
 223              		.thumb
 224              		.thumb_func
 225              		.type	USBUART_1_SOF_ISR, %function
 226              	USBUART_1_SOF_ISR:
 227              	.LFB3:
 271:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 273:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 274:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 10


 287:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 288:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 290:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 292:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 299:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 301:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP4].addr & USBUART_1_DIR_IN))
 307:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 312:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP4) != USBUART_1_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP4].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 318:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP4].apiEpState = USBUART_1_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 327:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP4)
 331:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 337:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 339:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 341:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 11


 344:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 345:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 348:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 354:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 355:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 370:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 372:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 374:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                  USBUART_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 381:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 383:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP5].addr & USBUART_1_DIR_IN))
 389:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 394:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP5) != USBUART_1_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP5].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 400:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 12


 401:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP5].apiEpState = USBUART_1_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 409:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP5)
 413:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 419:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 421:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 423:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 427:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 430:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 436:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 437:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 452:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 454:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 456:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 13


 458:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 463:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 465:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP6].addr & USBUART_1_DIR_IN))
 471:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 476:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP6) != USBUART_1_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP6].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 482:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP6].apiEpState = USBUART_1_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 491:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP6)
 495:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 501:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 503:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 505:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 509:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 512:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 14


 515:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 518:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 519:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 534:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 536:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 538:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 545:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 547:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP7].addr & USBUART_1_DIR_IN))
 553:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 558:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP7) != USBUART_1_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP7].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 564:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP7].apiEpState = USBUART_1_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 15


 572:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 573:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 574:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP7)
 578:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 584:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 586:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 588:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 592:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 595:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 601:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 602:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 617:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 619:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 621:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 628:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP8_INTR);
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 16


 629:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 630:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP8].addr & USBUART_1_DIR_IN))
 636:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 641:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP8) != USBUART_1_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP8].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 647:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP8].apiEpState = USBUART_1_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 656:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP8)
 660:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 666:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 668:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 670:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 674:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 677:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 683:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 684:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 17


 686:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_SOF_ISR
 687:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 228              		.loc 1 694 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 80B4     		push	{r7}
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 695:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 699:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 701:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 703:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 705:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 238              		.loc 1 708 0
 239 0004 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 0006 5DF8047B 		ldr	r7, [sp], #4
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 000a 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE3:
 248              		.size	USBUART_1_SOF_ISR, .-USBUART_1_SOF_ISR
 249              		.section	.text.USBUART_1_BUS_RESET_ISR,"ax",%progbits
 250              		.align	2
 251              		.global	USBUART_1_BUS_RESET_ISR
 252              		.thumb
 253              		.thumb_func
 254              		.type	USBUART_1_BUS_RESET_ISR, %function
 255              	USBUART_1_BUS_RESET_ISR:
 256              	.LFB4:
 709:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 711:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 712:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /*******************************************************************************
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 18


 714:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Function Name: USBUART_1_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 717:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 720:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 721:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBUART_1_episr.c **** CY_ISR(USBUART_1_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBUART_1_episr.c **** {
 257              		.loc 1 723 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 724:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 728:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 730:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 732:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 734:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ReInitComponent();
 267              		.loc 1 734 0
 268 0004 FFF7FEFF 		bl	USBUART_1_ReInitComponent
 735:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 736:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USBUART_1_episr.c **** }
 269              		.loc 1 739 0
 270 0008 80BD     		pop	{r7, pc}
 271              		.cfi_endproc
 272              	.LFE4:
 273              		.size	USBUART_1_BUS_RESET_ISR, .-USBUART_1_BUS_RESET_ISR
 274 000a 00BF     		.text
 275              	.Letext0:
 276              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 277              		.file 3 ".\\Generated_Source\\PSoC5\\USBUART_1.h"
 278              		.file 4 ".\\Generated_Source\\PSoC5\\USBUART_1_pvt.h"
 279              		.section	.debug_info,"",%progbits
 280              	.Ldebug_info0:
 281 0000 2B020000 		.4byte	0x22b
 282 0004 0400     		.2byte	0x4
 283 0006 00000000 		.4byte	.Ldebug_abbrev0
 284 000a 04       		.byte	0x4
 285 000b 01       		.uleb128 0x1
 286 000c D1000000 		.4byte	.LASF37
 287 0010 01       		.byte	0x1
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 19


 288 0011 C3010000 		.4byte	.LASF38
 289 0015 55020000 		.4byte	.LASF39
 290 0019 00000000 		.4byte	.Ldebug_ranges0+0
 291 001d 00000000 		.4byte	0
 292 0021 00000000 		.4byte	.Ldebug_line0
 293 0025 02       		.uleb128 0x2
 294 0026 01       		.byte	0x1
 295 0027 06       		.byte	0x6
 296 0028 DB020000 		.4byte	.LASF0
 297 002c 02       		.uleb128 0x2
 298 002d 01       		.byte	0x1
 299 002e 08       		.byte	0x8
 300 002f 56000000 		.4byte	.LASF1
 301 0033 02       		.uleb128 0x2
 302 0034 02       		.byte	0x2
 303 0035 05       		.byte	0x5
 304 0036 AD020000 		.4byte	.LASF2
 305 003a 02       		.uleb128 0x2
 306 003b 02       		.byte	0x2
 307 003c 07       		.byte	0x7
 308 003d 19000000 		.4byte	.LASF3
 309 0041 02       		.uleb128 0x2
 310 0042 04       		.byte	0x4
 311 0043 05       		.byte	0x5
 312 0044 C7020000 		.4byte	.LASF4
 313 0048 02       		.uleb128 0x2
 314 0049 04       		.byte	0x4
 315 004a 07       		.byte	0x7
 316 004b 69000000 		.4byte	.LASF5
 317 004f 02       		.uleb128 0x2
 318 0050 08       		.byte	0x8
 319 0051 05       		.byte	0x5
 320 0052 29020000 		.4byte	.LASF6
 321 0056 02       		.uleb128 0x2
 322 0057 08       		.byte	0x8
 323 0058 07       		.byte	0x7
 324 0059 A2010000 		.4byte	.LASF7
 325 005d 03       		.uleb128 0x3
 326 005e 04       		.byte	0x4
 327 005f 05       		.byte	0x5
 328 0060 696E7400 		.ascii	"int\000"
 329 0064 02       		.uleb128 0x2
 330 0065 04       		.byte	0x4
 331 0066 07       		.byte	0x7
 332 0067 7C010000 		.4byte	.LASF8
 333 006b 04       		.uleb128 0x4
 334 006c B7020000 		.4byte	.LASF9
 335 0070 02       		.byte	0x2
 336 0071 9201     		.2byte	0x192
 337 0073 2C000000 		.4byte	0x2c
 338 0077 04       		.uleb128 0x4
 339 0078 6A010000 		.4byte	.LASF10
 340 007c 02       		.byte	0x2
 341 007d 9301     		.2byte	0x193
 342 007f 3A000000 		.4byte	0x3a
 343 0083 02       		.uleb128 0x2
 344 0084 04       		.byte	0x4
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 20


 345 0085 04       		.byte	0x4
 346 0086 06000000 		.4byte	.LASF11
 347 008a 02       		.uleb128 0x2
 348 008b 08       		.byte	0x8
 349 008c 04       		.byte	0x4
 350 008d 99000000 		.4byte	.LASF12
 351 0091 02       		.uleb128 0x2
 352 0092 01       		.byte	0x1
 353 0093 08       		.byte	0x8
 354 0094 50020000 		.4byte	.LASF13
 355 0098 04       		.uleb128 0x4
 356 0099 64000000 		.4byte	.LASF14
 357 009d 02       		.byte	0x2
 358 009e 3C02     		.2byte	0x23c
 359 00a0 A4000000 		.4byte	0xa4
 360 00a4 05       		.uleb128 0x5
 361 00a5 6B000000 		.4byte	0x6b
 362 00a9 02       		.uleb128 0x2
 363 00aa 04       		.byte	0x4
 364 00ab 07       		.byte	0x7
 365 00ac 01020000 		.4byte	.LASF15
 366 00b0 06       		.uleb128 0x6
 367 00b1 0C       		.byte	0xc
 368 00b2 03       		.byte	0x3
 369 00b3 8D       		.byte	0x8d
 370 00b4 25010000 		.4byte	0x125
 371 00b8 07       		.uleb128 0x7
 372 00b9 A0000000 		.4byte	.LASF16
 373 00bd 03       		.byte	0x3
 374 00be 8F       		.byte	0x8f
 375 00bf 6B000000 		.4byte	0x6b
 376 00c3 00       		.byte	0
 377 00c4 07       		.uleb128 0x7
 378 00c5 71010000 		.4byte	.LASF17
 379 00c9 03       		.byte	0x3
 380 00ca 90       		.byte	0x90
 381 00cb 6B000000 		.4byte	0x6b
 382 00cf 01       		.byte	0x1
 383 00d0 07       		.uleb128 0x7
 384 00d1 B9010000 		.4byte	.LASF18
 385 00d5 03       		.byte	0x3
 386 00d6 91       		.byte	0x91
 387 00d7 6B000000 		.4byte	0x6b
 388 00db 02       		.byte	0x2
 389 00dc 07       		.uleb128 0x7
 390 00dd 4D000000 		.4byte	.LASF19
 391 00e1 03       		.byte	0x3
 392 00e2 92       		.byte	0x92
 393 00e3 6B000000 		.4byte	0x6b
 394 00e7 03       		.byte	0x3
 395 00e8 07       		.uleb128 0x7
 396 00e9 7B000000 		.4byte	.LASF20
 397 00ed 03       		.byte	0x3
 398 00ee 93       		.byte	0x93
 399 00ef 6B000000 		.4byte	0x6b
 400 00f3 04       		.byte	0x4
 401 00f4 07       		.uleb128 0x7
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 21


 402 00f5 22020000 		.4byte	.LASF21
 403 00f9 03       		.byte	0x3
 404 00fa 94       		.byte	0x94
 405 00fb 6B000000 		.4byte	0x6b
 406 00ff 05       		.byte	0x5
 407 0100 07       		.uleb128 0x7
 408 0101 D0020000 		.4byte	.LASF22
 409 0105 03       		.byte	0x3
 410 0106 95       		.byte	0x95
 411 0107 77000000 		.4byte	0x77
 412 010b 06       		.byte	0x6
 413 010c 07       		.uleb128 0x7
 414 010d A2020000 		.4byte	.LASF23
 415 0111 03       		.byte	0x3
 416 0112 96       		.byte	0x96
 417 0113 77000000 		.4byte	0x77
 418 0117 08       		.byte	0x8
 419 0118 07       		.uleb128 0x7
 420 0119 BD020000 		.4byte	.LASF24
 421 011d 03       		.byte	0x3
 422 011e 97       		.byte	0x97
 423 011f 6B000000 		.4byte	0x6b
 424 0123 0A       		.byte	0xa
 425 0124 00       		.byte	0
 426 0125 08       		.uleb128 0x8
 427 0126 37020000 		.4byte	.LASF25
 428 012a 03       		.byte	0x3
 429 012b 98       		.byte	0x98
 430 012c B0000000 		.4byte	0xb0
 431 0130 06       		.uleb128 0x6
 432 0131 10       		.byte	0x10
 433 0132 03       		.byte	0x3
 434 0133 D4       		.byte	0xd4
 435 0134 69010000 		.4byte	0x169
 436 0138 07       		.uleb128 0x7
 437 0139 3F000000 		.4byte	.LASF26
 438 013d 03       		.byte	0x3
 439 013e D6       		.byte	0xd6
 440 013f 6B000000 		.4byte	0x6b
 441 0143 00       		.byte	0
 442 0144 07       		.uleb128 0x7
 443 0145 46000000 		.4byte	.LASF27
 444 0149 03       		.byte	0x3
 445 014a D7       		.byte	0xd7
 446 014b 6B000000 		.4byte	0x6b
 447 014f 01       		.byte	0x1
 448 0150 07       		.uleb128 0x7
 449 0151 00000000 		.4byte	.LASF28
 450 0155 03       		.byte	0x3
 451 0156 D8       		.byte	0xd8
 452 0157 6B000000 		.4byte	0x6b
 453 015b 02       		.byte	0x2
 454 015c 09       		.uleb128 0x9
 455 015d 67617000 		.ascii	"gap\000"
 456 0161 03       		.byte	0x3
 457 0162 D9       		.byte	0xd9
 458 0163 69010000 		.4byte	0x169
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 22


 459 0167 03       		.byte	0x3
 460 0168 00       		.byte	0
 461 0169 0A       		.uleb128 0xa
 462 016a 6B000000 		.4byte	0x6b
 463 016e 79010000 		.4byte	0x179
 464 0172 0B       		.uleb128 0xb
 465 0173 A9000000 		.4byte	0xa9
 466 0177 0C       		.byte	0xc
 467 0178 00       		.byte	0
 468 0179 08       		.uleb128 0x8
 469 017a 0A020000 		.4byte	.LASF29
 470 017e 03       		.byte	0x3
 471 017f DA       		.byte	0xda
 472 0180 30010000 		.4byte	0x130
 473 0184 0C       		.uleb128 0xc
 474 0185 90       		.byte	0x90
 475 0186 03       		.byte	0x3
 476 0187 0E01     		.2byte	0x10e
 477 0189 9B010000 		.4byte	0x19b
 478 018d 0D       		.uleb128 0xd
 479 018e 80000000 		.4byte	.LASF30
 480 0192 03       		.byte	0x3
 481 0193 1001     		.2byte	0x110
 482 0195 9B010000 		.4byte	0x19b
 483 0199 00       		.byte	0
 484 019a 00       		.byte	0
 485 019b 0A       		.uleb128 0xa
 486 019c 79010000 		.4byte	0x179
 487 01a0 AB010000 		.4byte	0x1ab
 488 01a4 0B       		.uleb128 0xb
 489 01a5 A9000000 		.4byte	0xa9
 490 01a9 08       		.byte	0x8
 491 01aa 00       		.byte	0
 492 01ab 04       		.uleb128 0x4
 493 01ac 89010000 		.4byte	.LASF31
 494 01b0 03       		.byte	0x3
 495 01b1 1101     		.2byte	0x111
 496 01b3 84010000 		.4byte	0x184
 497 01b7 0E       		.uleb128 0xe
 498 01b8 2C000000 		.4byte	.LASF32
 499 01bc 01       		.byte	0x1
 500 01bd 25       		.byte	0x25
 501 01be 00000000 		.4byte	.LFB0
 502 01c2 54000000 		.4byte	.LFE0-.LFB0
 503 01c6 01       		.uleb128 0x1
 504 01c7 9C       		.byte	0x9c
 505 01c8 0E       		.uleb128 0xe
 506 01c9 86000000 		.4byte	.LASF33
 507 01cd 01       		.byte	0x1
 508 01ce 78       		.byte	0x78
 509 01cf 00000000 		.4byte	.LFB1
 510 01d3 54000000 		.4byte	.LFE1-.LFB1
 511 01d7 01       		.uleb128 0x1
 512 01d8 9C       		.byte	0x9c
 513 01d9 0E       		.uleb128 0xe
 514 01da EE010000 		.4byte	.LASF34
 515 01de 01       		.byte	0x1
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 23


 516 01df C9       		.byte	0xc9
 517 01e0 00000000 		.4byte	.LFB2
 518 01e4 5C000000 		.4byte	.LFE2-.LFB2
 519 01e8 01       		.uleb128 0x1
 520 01e9 9C       		.byte	0x9c
 521 01ea 0F       		.uleb128 0xf
 522 01eb BF000000 		.4byte	.LASF35
 523 01ef 01       		.byte	0x1
 524 01f0 B502     		.2byte	0x2b5
 525 01f2 00000000 		.4byte	.LFB3
 526 01f6 0C000000 		.4byte	.LFE3-.LFB3
 527 01fa 01       		.uleb128 0x1
 528 01fb 9C       		.byte	0x9c
 529 01fc 10       		.uleb128 0x10
 530 01fd A7000000 		.4byte	.LASF36
 531 0201 01       		.byte	0x1
 532 0202 D202     		.2byte	0x2d2
 533 0204 00000000 		.4byte	.LFB4
 534 0208 0A000000 		.4byte	.LFE4-.LFB4
 535 020c 01       		.uleb128 0x1
 536 020d 9C       		.byte	0x9c
 537 020e 0A       		.uleb128 0xa
 538 020f 25010000 		.4byte	0x125
 539 0213 1E020000 		.4byte	0x21e
 540 0217 0B       		.uleb128 0xb
 541 0218 A9000000 		.4byte	0xa9
 542 021c 08       		.byte	0x8
 543 021d 00       		.byte	0
 544 021e 11       		.uleb128 0x11
 545 021f 0C000000 		.4byte	.LASF40
 546 0223 04       		.byte	0x4
 547 0224 79       		.byte	0x79
 548 0225 29020000 		.4byte	0x229
 549 0229 05       		.uleb128 0x5
 550 022a 0E020000 		.4byte	0x20e
 551 022e 00       		.byte	0
 552              		.section	.debug_abbrev,"",%progbits
 553              	.Ldebug_abbrev0:
 554 0000 01       		.uleb128 0x1
 555 0001 11       		.uleb128 0x11
 556 0002 01       		.byte	0x1
 557 0003 25       		.uleb128 0x25
 558 0004 0E       		.uleb128 0xe
 559 0005 13       		.uleb128 0x13
 560 0006 0B       		.uleb128 0xb
 561 0007 03       		.uleb128 0x3
 562 0008 0E       		.uleb128 0xe
 563 0009 1B       		.uleb128 0x1b
 564 000a 0E       		.uleb128 0xe
 565 000b 55       		.uleb128 0x55
 566 000c 17       		.uleb128 0x17
 567 000d 11       		.uleb128 0x11
 568 000e 01       		.uleb128 0x1
 569 000f 10       		.uleb128 0x10
 570 0010 17       		.uleb128 0x17
 571 0011 00       		.byte	0
 572 0012 00       		.byte	0
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 24


 573 0013 02       		.uleb128 0x2
 574 0014 24       		.uleb128 0x24
 575 0015 00       		.byte	0
 576 0016 0B       		.uleb128 0xb
 577 0017 0B       		.uleb128 0xb
 578 0018 3E       		.uleb128 0x3e
 579 0019 0B       		.uleb128 0xb
 580 001a 03       		.uleb128 0x3
 581 001b 0E       		.uleb128 0xe
 582 001c 00       		.byte	0
 583 001d 00       		.byte	0
 584 001e 03       		.uleb128 0x3
 585 001f 24       		.uleb128 0x24
 586 0020 00       		.byte	0
 587 0021 0B       		.uleb128 0xb
 588 0022 0B       		.uleb128 0xb
 589 0023 3E       		.uleb128 0x3e
 590 0024 0B       		.uleb128 0xb
 591 0025 03       		.uleb128 0x3
 592 0026 08       		.uleb128 0x8
 593 0027 00       		.byte	0
 594 0028 00       		.byte	0
 595 0029 04       		.uleb128 0x4
 596 002a 16       		.uleb128 0x16
 597 002b 00       		.byte	0
 598 002c 03       		.uleb128 0x3
 599 002d 0E       		.uleb128 0xe
 600 002e 3A       		.uleb128 0x3a
 601 002f 0B       		.uleb128 0xb
 602 0030 3B       		.uleb128 0x3b
 603 0031 05       		.uleb128 0x5
 604 0032 49       		.uleb128 0x49
 605 0033 13       		.uleb128 0x13
 606 0034 00       		.byte	0
 607 0035 00       		.byte	0
 608 0036 05       		.uleb128 0x5
 609 0037 35       		.uleb128 0x35
 610 0038 00       		.byte	0
 611 0039 49       		.uleb128 0x49
 612 003a 13       		.uleb128 0x13
 613 003b 00       		.byte	0
 614 003c 00       		.byte	0
 615 003d 06       		.uleb128 0x6
 616 003e 13       		.uleb128 0x13
 617 003f 01       		.byte	0x1
 618 0040 0B       		.uleb128 0xb
 619 0041 0B       		.uleb128 0xb
 620 0042 3A       		.uleb128 0x3a
 621 0043 0B       		.uleb128 0xb
 622 0044 3B       		.uleb128 0x3b
 623 0045 0B       		.uleb128 0xb
 624 0046 01       		.uleb128 0x1
 625 0047 13       		.uleb128 0x13
 626 0048 00       		.byte	0
 627 0049 00       		.byte	0
 628 004a 07       		.uleb128 0x7
 629 004b 0D       		.uleb128 0xd
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 25


 630 004c 00       		.byte	0
 631 004d 03       		.uleb128 0x3
 632 004e 0E       		.uleb128 0xe
 633 004f 3A       		.uleb128 0x3a
 634 0050 0B       		.uleb128 0xb
 635 0051 3B       		.uleb128 0x3b
 636 0052 0B       		.uleb128 0xb
 637 0053 49       		.uleb128 0x49
 638 0054 13       		.uleb128 0x13
 639 0055 38       		.uleb128 0x38
 640 0056 0B       		.uleb128 0xb
 641 0057 00       		.byte	0
 642 0058 00       		.byte	0
 643 0059 08       		.uleb128 0x8
 644 005a 16       		.uleb128 0x16
 645 005b 00       		.byte	0
 646 005c 03       		.uleb128 0x3
 647 005d 0E       		.uleb128 0xe
 648 005e 3A       		.uleb128 0x3a
 649 005f 0B       		.uleb128 0xb
 650 0060 3B       		.uleb128 0x3b
 651 0061 0B       		.uleb128 0xb
 652 0062 49       		.uleb128 0x49
 653 0063 13       		.uleb128 0x13
 654 0064 00       		.byte	0
 655 0065 00       		.byte	0
 656 0066 09       		.uleb128 0x9
 657 0067 0D       		.uleb128 0xd
 658 0068 00       		.byte	0
 659 0069 03       		.uleb128 0x3
 660 006a 08       		.uleb128 0x8
 661 006b 3A       		.uleb128 0x3a
 662 006c 0B       		.uleb128 0xb
 663 006d 3B       		.uleb128 0x3b
 664 006e 0B       		.uleb128 0xb
 665 006f 49       		.uleb128 0x49
 666 0070 13       		.uleb128 0x13
 667 0071 38       		.uleb128 0x38
 668 0072 0B       		.uleb128 0xb
 669 0073 00       		.byte	0
 670 0074 00       		.byte	0
 671 0075 0A       		.uleb128 0xa
 672 0076 01       		.uleb128 0x1
 673 0077 01       		.byte	0x1
 674 0078 49       		.uleb128 0x49
 675 0079 13       		.uleb128 0x13
 676 007a 01       		.uleb128 0x1
 677 007b 13       		.uleb128 0x13
 678 007c 00       		.byte	0
 679 007d 00       		.byte	0
 680 007e 0B       		.uleb128 0xb
 681 007f 21       		.uleb128 0x21
 682 0080 00       		.byte	0
 683 0081 49       		.uleb128 0x49
 684 0082 13       		.uleb128 0x13
 685 0083 2F       		.uleb128 0x2f
 686 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 26


 687 0085 00       		.byte	0
 688 0086 00       		.byte	0
 689 0087 0C       		.uleb128 0xc
 690 0088 13       		.uleb128 0x13
 691 0089 01       		.byte	0x1
 692 008a 0B       		.uleb128 0xb
 693 008b 0B       		.uleb128 0xb
 694 008c 3A       		.uleb128 0x3a
 695 008d 0B       		.uleb128 0xb
 696 008e 3B       		.uleb128 0x3b
 697 008f 05       		.uleb128 0x5
 698 0090 01       		.uleb128 0x1
 699 0091 13       		.uleb128 0x13
 700 0092 00       		.byte	0
 701 0093 00       		.byte	0
 702 0094 0D       		.uleb128 0xd
 703 0095 0D       		.uleb128 0xd
 704 0096 00       		.byte	0
 705 0097 03       		.uleb128 0x3
 706 0098 0E       		.uleb128 0xe
 707 0099 3A       		.uleb128 0x3a
 708 009a 0B       		.uleb128 0xb
 709 009b 3B       		.uleb128 0x3b
 710 009c 05       		.uleb128 0x5
 711 009d 49       		.uleb128 0x49
 712 009e 13       		.uleb128 0x13
 713 009f 38       		.uleb128 0x38
 714 00a0 0B       		.uleb128 0xb
 715 00a1 00       		.byte	0
 716 00a2 00       		.byte	0
 717 00a3 0E       		.uleb128 0xe
 718 00a4 2E       		.uleb128 0x2e
 719 00a5 00       		.byte	0
 720 00a6 3F       		.uleb128 0x3f
 721 00a7 19       		.uleb128 0x19
 722 00a8 03       		.uleb128 0x3
 723 00a9 0E       		.uleb128 0xe
 724 00aa 3A       		.uleb128 0x3a
 725 00ab 0B       		.uleb128 0xb
 726 00ac 3B       		.uleb128 0x3b
 727 00ad 0B       		.uleb128 0xb
 728 00ae 27       		.uleb128 0x27
 729 00af 19       		.uleb128 0x19
 730 00b0 11       		.uleb128 0x11
 731 00b1 01       		.uleb128 0x1
 732 00b2 12       		.uleb128 0x12
 733 00b3 06       		.uleb128 0x6
 734 00b4 40       		.uleb128 0x40
 735 00b5 18       		.uleb128 0x18
 736 00b6 9742     		.uleb128 0x2117
 737 00b8 19       		.uleb128 0x19
 738 00b9 00       		.byte	0
 739 00ba 00       		.byte	0
 740 00bb 0F       		.uleb128 0xf
 741 00bc 2E       		.uleb128 0x2e
 742 00bd 00       		.byte	0
 743 00be 3F       		.uleb128 0x3f
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 27


 744 00bf 19       		.uleb128 0x19
 745 00c0 03       		.uleb128 0x3
 746 00c1 0E       		.uleb128 0xe
 747 00c2 3A       		.uleb128 0x3a
 748 00c3 0B       		.uleb128 0xb
 749 00c4 3B       		.uleb128 0x3b
 750 00c5 05       		.uleb128 0x5
 751 00c6 27       		.uleb128 0x27
 752 00c7 19       		.uleb128 0x19
 753 00c8 11       		.uleb128 0x11
 754 00c9 01       		.uleb128 0x1
 755 00ca 12       		.uleb128 0x12
 756 00cb 06       		.uleb128 0x6
 757 00cc 40       		.uleb128 0x40
 758 00cd 18       		.uleb128 0x18
 759 00ce 9742     		.uleb128 0x2117
 760 00d0 19       		.uleb128 0x19
 761 00d1 00       		.byte	0
 762 00d2 00       		.byte	0
 763 00d3 10       		.uleb128 0x10
 764 00d4 2E       		.uleb128 0x2e
 765 00d5 00       		.byte	0
 766 00d6 3F       		.uleb128 0x3f
 767 00d7 19       		.uleb128 0x19
 768 00d8 03       		.uleb128 0x3
 769 00d9 0E       		.uleb128 0xe
 770 00da 3A       		.uleb128 0x3a
 771 00db 0B       		.uleb128 0xb
 772 00dc 3B       		.uleb128 0x3b
 773 00dd 05       		.uleb128 0x5
 774 00de 27       		.uleb128 0x27
 775 00df 19       		.uleb128 0x19
 776 00e0 11       		.uleb128 0x11
 777 00e1 01       		.uleb128 0x1
 778 00e2 12       		.uleb128 0x12
 779 00e3 06       		.uleb128 0x6
 780 00e4 40       		.uleb128 0x40
 781 00e5 18       		.uleb128 0x18
 782 00e6 9642     		.uleb128 0x2116
 783 00e8 19       		.uleb128 0x19
 784 00e9 00       		.byte	0
 785 00ea 00       		.byte	0
 786 00eb 11       		.uleb128 0x11
 787 00ec 34       		.uleb128 0x34
 788 00ed 00       		.byte	0
 789 00ee 03       		.uleb128 0x3
 790 00ef 0E       		.uleb128 0xe
 791 00f0 3A       		.uleb128 0x3a
 792 00f1 0B       		.uleb128 0xb
 793 00f2 3B       		.uleb128 0x3b
 794 00f3 0B       		.uleb128 0xb
 795 00f4 49       		.uleb128 0x49
 796 00f5 13       		.uleb128 0x13
 797 00f6 3F       		.uleb128 0x3f
 798 00f7 19       		.uleb128 0x19
 799 00f8 3C       		.uleb128 0x3c
 800 00f9 19       		.uleb128 0x19
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 28


 801 00fa 00       		.byte	0
 802 00fb 00       		.byte	0
 803 00fc 00       		.byte	0
 804              		.section	.debug_aranges,"",%progbits
 805 0000 3C000000 		.4byte	0x3c
 806 0004 0200     		.2byte	0x2
 807 0006 00000000 		.4byte	.Ldebug_info0
 808 000a 04       		.byte	0x4
 809 000b 00       		.byte	0
 810 000c 0000     		.2byte	0
 811 000e 0000     		.2byte	0
 812 0010 00000000 		.4byte	.LFB0
 813 0014 54000000 		.4byte	.LFE0-.LFB0
 814 0018 00000000 		.4byte	.LFB1
 815 001c 54000000 		.4byte	.LFE1-.LFB1
 816 0020 00000000 		.4byte	.LFB2
 817 0024 5C000000 		.4byte	.LFE2-.LFB2
 818 0028 00000000 		.4byte	.LFB3
 819 002c 0C000000 		.4byte	.LFE3-.LFB3
 820 0030 00000000 		.4byte	.LFB4
 821 0034 0A000000 		.4byte	.LFE4-.LFB4
 822 0038 00000000 		.4byte	0
 823 003c 00000000 		.4byte	0
 824              		.section	.debug_ranges,"",%progbits
 825              	.Ldebug_ranges0:
 826 0000 00000000 		.4byte	.LFB0
 827 0004 54000000 		.4byte	.LFE0
 828 0008 00000000 		.4byte	.LFB1
 829 000c 54000000 		.4byte	.LFE1
 830 0010 00000000 		.4byte	.LFB2
 831 0014 5C000000 		.4byte	.LFE2
 832 0018 00000000 		.4byte	.LFB3
 833 001c 0C000000 		.4byte	.LFE3
 834 0020 00000000 		.4byte	.LFB4
 835 0024 0A000000 		.4byte	.LFE4
 836 0028 00000000 		.4byte	0
 837 002c 00000000 		.4byte	0
 838              		.section	.debug_line,"",%progbits
 839              	.Ldebug_line0:
 840 0000 F6000000 		.section	.debug_str,"MS",%progbits,1
 840      02007000 
 840      00000201 
 840      FB0E0D00 
 840      01010101 
 841              	.LASF28:
 842 0000 65704372 		.ascii	"epCr0\000"
 842      3000
 843              	.LASF11:
 844 0006 666C6F61 		.ascii	"float\000"
 844      7400
 845              	.LASF40:
 846 000c 55534255 		.ascii	"USBUART_1_EP\000"
 846      4152545F 
 846      315F4550 
 846      00
 847              	.LASF3:
 848 0019 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 29


 848      7420756E 
 848      7369676E 
 848      65642069 
 848      6E7400
 849              	.LASF32:
 850 002c 55534255 		.ascii	"USBUART_1_EP_1_ISR\000"
 850      4152545F 
 850      315F4550 
 850      5F315F49 
 850      535200
 851              	.LASF26:
 852 003f 6570436E 		.ascii	"epCnt0\000"
 852      743000
 853              	.LASF27:
 854 0046 6570436E 		.ascii	"epCnt1\000"
 854      743100
 855              	.LASF19:
 856 004d 6570546F 		.ascii	"epToggle\000"
 856      67676C65 
 856      00
 857              	.LASF1:
 858 0056 756E7369 		.ascii	"unsigned char\000"
 858      676E6564 
 858      20636861 
 858      7200
 859              	.LASF14:
 860 0064 72656738 		.ascii	"reg8\000"
 860      00
 861              	.LASF5:
 862 0069 6C6F6E67 		.ascii	"long unsigned int\000"
 862      20756E73 
 862      69676E65 
 862      6420696E 
 862      7400
 863              	.LASF20:
 864 007b 61646472 		.ascii	"addr\000"
 864      00
 865              	.LASF30:
 866 0080 73696545 		.ascii	"sieEp\000"
 866      7000
 867              	.LASF33:
 868 0086 55534255 		.ascii	"USBUART_1_EP_2_ISR\000"
 868      4152545F 
 868      315F4550 
 868      5F325F49 
 868      535200
 869              	.LASF12:
 870 0099 646F7562 		.ascii	"double\000"
 870      6C6500
 871              	.LASF16:
 872 00a0 61747472 		.ascii	"attrib\000"
 872      696200
 873              	.LASF36:
 874 00a7 55534255 		.ascii	"USBUART_1_BUS_RESET_ISR\000"
 874      4152545F 
 874      315F4255 
 874      535F5245 
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 30


 874      5345545F 
 875              	.LASF35:
 876 00bf 55534255 		.ascii	"USBUART_1_SOF_ISR\000"
 876      4152545F 
 876      315F534F 
 876      465F4953 
 876      5200
 877              	.LASF37:
 878 00d1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 878      4320342E 
 878      392E3320 
 878      32303135 
 878      30333033 
 879 0104 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 879      20726576 
 879      6973696F 
 879      6E203232 
 879      31323230 
 880 0137 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 880      74643D67 
 880      6E753939 
 880      202D6666 
 880      756E6374 
 881              	.LASF10:
 882 016a 75696E74 		.ascii	"uint16\000"
 882      313600
 883              	.LASF17:
 884 0171 61706945 		.ascii	"apiEpState\000"
 884      70537461 
 884      746500
 885              	.LASF8:
 886 017c 756E7369 		.ascii	"unsigned int\000"
 886      676E6564 
 886      20696E74 
 886      00
 887              	.LASF31:
 888 0189 55534255 		.ascii	"USBUART_1_sie_eps_struct\000"
 888      4152545F 
 888      315F7369 
 888      655F6570 
 888      735F7374 
 889              	.LASF7:
 890 01a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 890      206C6F6E 
 890      6720756E 
 890      7369676E 
 890      65642069 
 891              	.LASF18:
 892 01b9 68774570 		.ascii	"hwEpState\000"
 892      53746174 
 892      6500
 893              	.LASF38:
 894 01c3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBUART_1_episr.c\000"
 894      6E657261 
 894      7465645F 
 894      536F7572 
 894      63655C50 
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 31


 895              	.LASF34:
 896 01ee 55534255 		.ascii	"USBUART_1_EP_3_ISR\000"
 896      4152545F 
 896      315F4550 
 896      5F335F49 
 896      535200
 897              	.LASF15:
 898 0201 73697A65 		.ascii	"sizetype\000"
 898      74797065 
 898      00
 899              	.LASF29:
 900 020a 55534255 		.ascii	"USBUART_1_sie_ep_struct\000"
 900      4152545F 
 900      315F7369 
 900      655F6570 
 900      5F737472 
 901              	.LASF21:
 902 0222 65704D6F 		.ascii	"epMode\000"
 902      646500
 903              	.LASF6:
 904 0229 6C6F6E67 		.ascii	"long long int\000"
 904      206C6F6E 
 904      6720696E 
 904      7400
 905              	.LASF25:
 906 0237 545F5553 		.ascii	"T_USBUART_1_EP_CTL_BLOCK\000"
 906      42554152 
 906      545F315F 
 906      45505F43 
 906      544C5F42 
 907              	.LASF13:
 908 0250 63686172 		.ascii	"char\000"
 908      00
 909              	.LASF39:
 910 0255 443A5C64 		.ascii	"D:\\develop\\projects\\SoundChipLogger\\firmware\\D"
 910      6576656C 
 910      6F705C70 
 910      726F6A65 
 910      6374735C 
 911 0283 4D415344 		.ascii	"MASDSPITest\\DMASDSPITest.cydsn\000"
 911      53504954 
 911      6573745C 
 911      444D4153 
 911      44535049 
 912              	.LASF23:
 913 02a2 62756666 		.ascii	"bufferSize\000"
 913      65725369 
 913      7A6500
 914              	.LASF2:
 915 02ad 73686F72 		.ascii	"short int\000"
 915      7420696E 
 915      7400
 916              	.LASF9:
 917 02b7 75696E74 		.ascii	"uint8\000"
 917      3800
 918              	.LASF24:
 919 02bd 696E7465 		.ascii	"interface\000"
ARM GAS  C:\Users\honet\AppData\Local\Temp\ccbgPf4a.s 			page 32


 919      72666163 
 919      6500
 920              	.LASF4:
 921 02c7 6C6F6E67 		.ascii	"long int\000"
 921      20696E74 
 921      00
 922              	.LASF22:
 923 02d0 62756666 		.ascii	"buffOffset\000"
 923      4F666673 
 923      657400
 924              	.LASF0:
 925 02db 7369676E 		.ascii	"signed char\000"
 925      65642063 
 925      68617200 
 926              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
